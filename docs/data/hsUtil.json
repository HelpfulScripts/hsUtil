{
	"id": 0,
	"name": "hsUtil",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"Array\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Array.ts",
			"comment": {
				"shortText": "### Array extensions."
			},
			"children": [
				{
					"id": 2,
					"name": "uniquefy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "uniquefy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "takes an `array` of elements of object literal type `<T>`, then sorts out any duplicate elements\nwith respect to a `key`. For an `array` od primitive type (`string`, `number`), `key` is ignored.\n### Example: object literals of type `<T>`\n```\nconst Values = [\n   {id: 1, b: 'first element'},\n   {id: 2, b: 'second element'},\n   {id: 3, b: 'third element'},\n   {id: 1, b: 'first element'},\n];",
								"text": "const u = uniquefy(Values, 'id');\n//=> [{id: 1, b: 'first element'}, {id: 2, b: 'second element'}, {id: 3, b: 'third element'}]\n```\n\n### Example: array of `string` or `number`\n```\nconst Values = [0, 1, 2, 0, 3, 2, 4];\n\nconst u = uniquefy(Values);\n//=> [0, 1, 2, 3, 4]\n```",
								"returns": "an array containing only unique elements of the original `array`\n"
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "an array of elements of type `T`, some of which may be duplicates."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 6,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "the field in the element object to use as key. `T[key]` must be a `string` or `number`."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "Array.ts",
							"line": 33,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "Array.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "\"Checksum\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Checksum.ts",
			"comment": {
				"shortText": "Creates a checksum on a string.\nAdapted from https://stackoverflow.com/questions/811195/fast-open-source-checksum-for-small-strings"
			},
			"children": [
				{
					"id": 8,
					"name": "shortCheckSum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 9,
							"name": "shortCheckSum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "fast implementation for short strings (20-500 chars)"
							},
							"parameters": [
								{
									"id": 10,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Checksum.ts",
							"line": 9,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "Checksum.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 11,
			"name": "\"Date\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Date.ts",
			"comment": {
				"shortText": "# Date formatting support.\nFormats are specified in a printf-style format string.\n## Supported Formats\n- `%YY, %YYYY`           : two- or four-digit year, as '73', '1973'\n- `%M, %MM, %MMM, %MMMM` : month of year as '2', '02', 'Feb', 'February'\n- `%D, %DD`              : day of month as '5', '05' (1...31)\n- `%DDD, %DDDD`          : day of week as 'Tue', 'Tuesday'\n- `%h, %hh`              : hour of day as '7', '07 (0...23)\n- `%m, %mm`              : minutes as '6', '06' (0..59)\n- `%ss`                  : seconds as '09' (0...59)\n- `%j, %jj, %jjj`        : milliseconds as '1', '15', '159'"
			},
			"children": [
				{
					"id": 13,
					"name": "dayStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long weekday names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": "[\n    ['Sun', 'Sunday'],['Mon', 'Monday'],['Tue', 'Tuesday'],['Wed', 'Wednesday'],['Thu', 'Thursday'],['Fri', 'Friday'],['Sat', 'Saturday']]"
				},
				{
					"id": 12,
					"name": "monthStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long month names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": "[\n    ['Jan', 'January'], ['Feb', 'February'], ['Mar', 'March'], ['Apr', 'April'], ['May', 'May'], ['Jun', 'June'],\n    ['Jul', 'July'], ['Aug', 'August'], ['Sep', 'September'], ['Oct', 'October'], ['Nov', 'November'], ['Dec', 'December']]"
				},
				{
					"id": 18,
					"name": "date",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 19,
							"name": "date",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "## Example:\n<pre>\ndate('%MM/%DD/%YY');           // -> 08/17/16 (using current date)\nlet d = new Date('7/4/2010');\ndate('%DDDD, %MM/%DD/%YY', d); // -> Sunday, 07/04/10\n</pre>",
								"returns": "a copy of `formatString` where all supported patterns are replaced by the respective values from `date`.\n"
							},
							"parameters": [
								{
									"id": 20,
									"name": "formatString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the format string to use."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21,
									"name": "date",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"defaultValue": "new Date()"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 43,
							"character": 20
						}
					]
				},
				{
					"id": 14,
					"name": "formatNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 15,
							"name": "formatNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "add leading zeros to an integer until `digits` are reached"
							},
							"parameters": [
								{
									"id": 16,
									"name": "number",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 17,
									"name": "digits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 25,
							"character": 21
						}
					]
				},
				{
					"id": 22,
					"name": "ms",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "converts minutes, hours, days, weeks ... into milliseconds and back"
					},
					"children": [
						{
							"id": 29,
							"name": "fromDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 30,
									"name": "fromDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 31,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 71,
									"character": 12
								}
							]
						},
						{
							"id": 26,
							"name": "fromHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 27,
									"name": "fromHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 28,
											"name": "h",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 70,
									"character": 13
								}
							]
						},
						{
							"id": 23,
							"name": "fromMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "fromMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 25,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 69,
									"character": 15
								}
							]
						},
						{
							"id": 32,
							"name": "fromWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "fromWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 34,
											"name": "w",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 72,
									"character": 13
								}
							]
						},
						{
							"id": 41,
							"name": "toDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 42,
									"name": "toDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 43,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 75,
									"character": 10
								}
							]
						},
						{
							"id": 38,
							"name": "toHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "toHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 40,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 74,
									"character": 11
								}
							]
						},
						{
							"id": 35,
							"name": "toMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "toMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 37,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 73,
									"character": 13
								}
							]
						},
						{
							"id": 44,
							"name": "toWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "toWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 46,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 76,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								29,
								26,
								23,
								32,
								41,
								38,
								35,
								44
							]
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 68,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						13,
						12
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						18,
						14
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						22
					]
				}
			],
			"sources": [
				{
					"fileName": "Date.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 47,
			"name": "\"Pacing\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Pacing.ts",
			"comment": {
				"shortText": "## Helpful Script Timing Support\nProvides convenience functions that don't depend on specific frameworks or libraries"
			},
			"children": [
				{
					"id": 48,
					"name": "Pace",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "paces a series of similar function calls to\n- not occur faster than a preset rate\n- not issue more unresolved calls then a preset limit",
						"text": "**Usage:**\n```\nconst q = new PacingQueue(100, 10); // 100ms between calls, at most 10 unresolved\n...\nconst result = await q.add((ms) => `I have been called after ${ms}ms`;})\nconsole.log(result));     // prints: I have been called after 105ms`\n```\n"
					},
					"children": [
						{
							"id": 54,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 55,
									"name": "new Pace",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 56,
											"name": "pace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "the minimum number of milliseconds between executions of\ntwo registered functions; defaults to 100;"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "100"
										},
										{
											"id": 57,
											"name": "maxConcurrent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "the maximum number of concurrent execution calls; defaults to -1 (no limit)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "-1"
										}
									],
									"type": {
										"type": "reference",
										"id": 48,
										"name": "Pace"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 77,
									"character": 32
								}
							]
						},
						{
							"id": 49,
							"name": "maxConcurrent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "max number of concurrent requests being called"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 69,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "-1"
						},
						{
							"id": 50,
							"name": "pace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the pace of calls in ms"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 71,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 53,
							"name": "started",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "functions that have been called, but have not resolved yet."
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 77,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 51,
							"name": "waitUntil",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the earliest time for the next call"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 73,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 52,
							"name": "waiting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "number of calls currently waiting in queue"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 75,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 68,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 69,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "adds the function to the queue. After an appropriate time has passed,\nthe function will be called with the delay in ms as parameter.",
										"returns": "a promise that resolved to the result of the function\n"
									},
									"parameters": [
										{
											"id": 70,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 71,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 72,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 73,
																	"name": "msSinceAdding",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "Pacing.ts",
															"line": 104,
															"character": 17
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 104,
									"character": 13
								}
							]
						},
						{
							"id": 66,
							"name": "inProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "inProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "functions that have been called, but have not resolved yet."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 96,
									"character": 14
								}
							]
						},
						{
							"id": 64,
							"name": "inQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 65,
									"name": "inQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "number of functions currently waiting in queue"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 94,
									"character": 11
								}
							]
						},
						{
							"id": 61,
							"name": "setMaxConcurrent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 62,
									"name": "setMaxConcurrent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "max number of concurrent requests being called"
									},
									"parameters": [
										{
											"id": 63,
											"name": "maxConcurrent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 92,
									"character": 20
								}
							]
						},
						{
							"id": 58,
							"name": "setPace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 59,
									"name": "setPace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "the pace of calls in ms"
									},
									"parameters": [
										{
											"id": 60,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 90,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								54
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								49,
								50,
								53,
								51,
								52
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								68,
								66,
								64,
								61,
								58
							]
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 67,
							"character": 17
						}
					]
				},
				{
					"id": 77,
					"name": "delay",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "delay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "promise-based delay function. Delays execution in a promise chain, passing the parameter\nreceived from the calling promise down to the resolving promise.\n```\ndelay(10)(param)\n   .then(param => {...})\n   .catch(...)\n```\nor: insert delay within the `then` chain:\n```\n<PromiseLike>\n   .then(a => { ... return b; })\n   .then(delay(10))\n   .then(b => { ... })\n   .catch(...)\n```\nor as an async/await pattern:\n```\ntry {\n   await <PromiseLike>\n   ...\n   await delay(10)\n   ...\n} catch(e) {\n   ...\n}\n```",
								"returns": "a `Promise` that resolves after `ms`\n"
							},
							"parameters": [
								{
									"id": 79,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 46,
							"character": 21
						}
					]
				},
				{
					"id": 74,
					"name": "timeout",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 75,
							"name": "timeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "timeout promise for use in `Promise.race()`.",
								"returns": "a Promise that rejects after `ms`\n"
							},
							"parameters": [
								{
									"id": 76,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the milliseconds to wait before rejecting"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 12,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						48
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						77,
						74
					]
				}
			],
			"sources": [
				{
					"fileName": "Pacing.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 200,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/index.ts",
			"children": [
				{
					"id": 207,
					"name": "Log",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 88
				},
				{
					"id": 203,
					"name": "Pace",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 48
				},
				{
					"id": 205,
					"name": "date",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 18
				},
				{
					"id": 202,
					"name": "delay",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 77
				},
				{
					"id": 206,
					"name": "ms",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 22
				},
				{
					"id": 204,
					"name": "shortCheckSum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 8
				},
				{
					"id": 201,
					"name": "timeout",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 74
				},
				{
					"id": 208,
					"name": "uniquefy",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						207,
						203,
						205,
						202,
						206,
						204,
						201,
						208
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 80,
			"name": "\"log\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/log.ts",
			"comment": {
				"shortText": "Logging convenience functions.\n## Usage",
				"text": "### Using the global `Log` instance\nSettings in `Log.log` are shared across modules\n```\nimport { Log } from 'hsutil'; const log = Log.log;\nlog.level(Log.INFO);         // sets the reporting level on the global instance\nlog.info('by the way:');     // -> 20160817 09:59:08.032 info by the way:\nlog.info(()=>'by the way:'); // -> 20160817 09:59:08.032 info by the way:\nlog.error('oh dear!');       // -> 20160817 09:59:08.045 error *** oh dear!\n```\n\n### Using a local `Log` instance\nCreate a new `Log` instance to keep changes local to the current module:\n```\nimport { Log } from 'hsutil';\nconst log = new Log('myModule');\nlog.info('by the way:'); // -> 20160817 09:59:08.032 myModule info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 myModule error *** oh dear!\n```\n\n### Using the `format` template:\n```\nlog.format('%MMM %DD %hh%mm%ss');\nlog.info('by the way:');  // -> Aug 17 095908 info by the way:\nlog.error('oh dear!');    // -> Aug 17 095908 error *** oh dear!\n```\n\n### Change the module prefix:\n```\nlog.prefix('Main');\nlog.format('%hh%mm%ss');\nlog.info('by the way:');  // -> 09:59:08.032 Main info by the way:\nlog.error('oh dear!');    // -> 09:59:08.045 Main error *** oh dear!\n```\n\n### Setting the Log level locally for the module\n```\nlog.level(log.WARN);\nlog.info('this will not be reported');\n```\n\n### Setting the Log level globally\nWill be used if no local level is set\n```\nlog.level(log.WARN, true);               // set global log level\nlog.info('this will be reported');       // because local level defaults to INFORM\nlog.level(null);                         // unset the local level\nlog.info('this will not be reported');   // because no local level is defined and global level is set to WARN\n```\n\n### log.inspect utility\nreturns a string representing a deep inspection of `myObj`.\n```\nlog.info(log.inspect(myObj));                    // prints the structure to first depth\nlog.info(log.inspect(myObj), {});                // prints the structure to inifinite depth\nlog.info(log.inspect(myObj), {colors:null});     // prints the structure without colors\nlog.info(myObj);                                 // equivalent to `log.info(log.inspect(myObj));`\n```\n\n## Reporting Levels:\n- &nbsp; {@link log.Log.DEBUG Log.DEBUG}\n- &nbsp; {@link log.Log.INFO  Log.INFO}\n- &nbsp; {@link log.Log.WARN  Log.WARN}\n- &nbsp; {@link log.Log.ERROR Log.ERROR}\n\n## Reporting methods\n- &nbsp; {@link log.Log.debug log.debug()}\n- &nbsp; {@link log.Log.info  log.info()}\n- &nbsp; {@link log.Log.warn  log.warn()}\n- &nbsp; {@link log.Log.error log.error()}\n\n## Configurations:\n- &nbsp; {@link log.Log.level   log.level()}\n- &nbsp; {@link log.Log.format  log.format()}\n- &nbsp; {@link log.Log.prefix  log.prefix()}\n\n## Inspection support:\n- &nbsp; {@link log.Log.inspect log.inspect()}\n"
			},
			"children": [
				{
					"id": 88,
					"name": "Log",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "main logging class. See {@link log log overview} for usage."
					},
					"children": [
						{
							"id": 107,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "new Log",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 109,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 88,
										"name": "Log"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 174,
									"character": 35
								}
							]
						},
						{
							"id": 106,
							"name": "colors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 174,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 105,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 173,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "-1"
						},
						{
							"id": 103,
							"name": "reportLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 171,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"id": 81,
								"name": "LevelDesc"
							},
							"defaultValue": "<LevelDesc>undefined"
						},
						{
							"id": 104,
							"name": "reportPrefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 172,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 92,
							"name": "DEBUG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Debug reporting level with importance 0"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 146,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"DEBUG\""
						},
						{
							"id": 95,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Warning reporting level with importance 3"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 155,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ERROR\""
						},
						{
							"id": 89,
							"name": "INDENT_COLORS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 140,
									"character": 34
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "['darkblue', 'darkgreen', 'darkred', 'darkcyan', 'darkyellow', 'darkmagenta']"
						},
						{
							"id": 93,
							"name": "INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 1"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 149,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"INFO\""
						},
						{
							"id": 94,
							"name": "WARN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 2"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 152,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"WARN\""
						},
						{
							"id": 91,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 143,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "Log.defDateFormat"
						},
						{
							"id": 90,
							"name": "defDateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current date format string. See [date module]('_date_.html')"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 142,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"%YYYY%MM%DD %hh:%mm:%ss.%jjj\""
						},
						{
							"id": 102,
							"name": "globalLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current reporting level, same across all modules"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 169,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"id": 81,
								"name": "LevelDesc"
							},
							"defaultValue": "Log.levels[Log.INFO]"
						},
						{
							"id": 101,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the global `log` object."
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 166,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 88,
								"name": "Log"
							},
							"defaultValue": "new Log('')"
						},
						{
							"id": 110,
							"name": "messageLength",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets the maximum length of a message.\nIf messages exceed this length, the middle of the message will be replaced by ellipses (...) such that the\noverall message does not exceed this length\nNegative values avoid shortening.\ngets the current maximum length of a message"
							},
							"getSignature": [
								{
									"id": 113,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "gets the current maximum length of a message"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 111,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the maximum length of a message.\nIf messages exceed this length, the middle of the message will be replaced by ellipses (...) such that the\noverall message does not exceed this length\nNegative values avoid shortening."
									},
									"parameters": [
										{
											"id": 112,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 184,
									"character": 28
								},
								{
									"fileName": "log.ts",
									"line": 187,
									"character": 28
								}
							]
						},
						{
							"id": 148,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 149,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "configures the log facility.\n- cfg.colors: boolean, determines if output is colored\n- cfg.logfile: sets the naming template for the logfile. Set logFile=null to disable.\n- cfg.format: sets the format for the timestamp for each log entry\n- cfg.level: sets the reporting level (same as calling log.level())"
									},
									"parameters": [
										{
											"id": 150,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 151,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 152,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 357,
																	"character": 29
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 153,
															"name": "format",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 357,
																	"character": 46
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 154,
															"name": "level",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 357,
																	"character": 61
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																152,
																153,
																154
															]
														}
													],
													"sources": [
														{
															"fileName": "log.ts",
															"line": 357,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 357,
									"character": 17
								}
							]
						},
						{
							"id": 118,
							"name": "debug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "debug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an debug message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is DEBUG or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 120,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 232,
									"character": 16
								}
							]
						},
						{
							"id": 130,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 131,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will always be reported to the log.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 132,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 271,
									"character": 16
								}
							]
						},
						{
							"id": 142,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 143,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the format string to use for logging. If no parameter is specified,\nthe function returns the currently set format string. The preset is '%YYYY%MM%DD %hh:%mm:%ss.%jjj'\nFor supported formats see {@link date date}.\nUsage\n- `format(null)` sets the format to `defDateFormat`\n- `format()` returns the current format without changing it.",
										"returns": "the currently set format string\n"
									},
									"parameters": [
										{
											"id": 144,
											"name": "fmtStr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "optional format string to use;"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 333,
									"character": 17
								}
							]
						},
						{
							"id": 163,
							"name": "getPrePostfix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "getPrePostfix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 165,
											"name": "indent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 166,
											"name": "level",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 167,
											"name": "currIndent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 168,
											"name": "colors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 403,
									"character": 27
								}
							]
						},
						{
							"id": 124,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 126,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 252,
									"character": 15
								}
							]
						},
						{
							"id": 155,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 156,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Usage:\n- `log.info(log.inspect(struct))`     -> `depth=0`, `indent='   '`, with html-coded colors\n- `log.info(log.inspect(struct, {}))` -> `depth=-1` (inf), `indent='   '`, with html-coded colors\n- `log.info(log.inspect(struct, {colors:null}))` -> no colors",
										"text": "The call returns a raw formatted text string, or a HTML formatted string if `colors` is defined.",
										"returns": "a string representation of an object literal, similar to the Node `util.inspect` call\n"
									},
									"parameters": [
										{
											"id": 157,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 158,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 159,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 162,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "an array of `css` color values: if defined, the output will be `HTML` formatted, with indentation\nlevels indicated by colors in ascending sequence from the array, restarting at index 0 if the array is shorter than the maximum indentation level.\n`colors` defaults to the static `COLORS` array. To disable, provide a value of `null`."
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 378,
																	"character": 59
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "Log.INDENT_COLORS"
														},
														{
															"id": 160,
															"name": "depth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "depth of recursion, defaults to 3. Use `null` or negative values for infinite depth"
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 378,
																	"character": 34
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "-1"
														},
														{
															"id": 161,
															"name": "indent",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "the indent string to use, will accumulate for each level of indentation, defaults to four spaces."
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 378,
																	"character": 45
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"   \""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																162,
																160,
																161
															]
														}
													],
													"sources": [
														{
															"fileName": "log.ts",
															"line": 378,
															"character": 27
														}
													]
												}
											},
											"defaultValue": "{depth:0, indent:'   ', colors:Log.INDENT_COLORS}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 378,
									"character": 18
								}
							]
						},
						{
							"id": 114,
							"name": "level",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "level",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the reporting level according to `newLevel`.\nValid values are {@link log.DEBUG log.DEBUG}, {@link log.INFO log.INFO},\n{@link log.WARN log.WARN}, {@link log.ERROR log.ERROR}, or `null`.\nSubsequent reporting calls will be filtered such that only calls with an importance\nat least the same as `newLevel` will be written to the log.<br>",
										"text": "By default, `newLevel` sets the reporting level for the module only, and takes precedence over\nany global level setting. Providing `null` as level value passes precedence back to the global setting.\nThis allows for simple per-module settings, for example in debugging scenarios.",
										"returns": "the new reporting level (DEBUG, INFO, WARN, ERROR)\n"
									},
									"parameters": [
										{
											"id": 116,
											"name": "newLevelSym",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "the new reporting level to set.\nIf omitted, the method returns the currently set reporting level.\nIf set to `null`, the module's local reporting level defaults to the global reporting level; `setGlobalLevel` is ignored."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 117,
											"name": "setGlobalLevel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "defaults to `false`. If `true`, sets the global reporting level for all modules."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 206,
									"character": 16
								}
							]
						},
						{
							"id": 133,
							"name": "out",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 134,
									"name": "out",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will be reported to the log if `lvl` meets or exceeds the current reporting level.",
										"returns": "the message written\n"
									},
									"parameters": [
										{
											"id": 135,
											"name": "lvl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the reporting level of `msg`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 136,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If `msg` is an object literal, a deep inspection will be printed.\nElse if `msg` is a function, it will be called to return the string to print or object to inspect. This\navoids constructing a potentially expensive message string if the level is below the current reporting level.\nFinally, if `msg` is a string, it will be printed with appropriate decoration, e.g. a date string and\nprefix."
											},
											"type": {
												"type": "reference",
												"id": 85,
												"name": "Msg"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 294,
									"character": 17
								}
							]
						},
						{
							"id": 137,
							"name": "output",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 138,
									"name": "output",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 139,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 140,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 141,
											"name": "line",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 319,
									"character": 20
								}
							]
						},
						{
							"id": 145,
							"name": "prefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 146,
									"name": "prefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "defines a prefix to be printed for each call to a log function.",
										"returns": "the new prefix\n"
									},
									"parameters": [
										{
											"id": 147,
											"name": "prf",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "the prefix to prepend. Defaults to '';"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 344,
									"character": 17
								}
							]
						},
						{
							"id": 121,
							"name": "progress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "progress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 123,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 242,
									"character": 19
								}
							]
						},
						{
							"id": 127,
							"name": "warn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "warn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an warning message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is WARN or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 129,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 262,
									"character": 15
								}
							]
						},
						{
							"id": 96,
							"name": "levels",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "map of valid reporting levels"
							},
							"children": [
								{
									"id": 97,
									"name": "__computed",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 100,
											"name": "desc",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"ERROR\""
										},
										{
											"id": 98,
											"name": "importance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 99,
											"name": "sym",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "Log.ERROR"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												100,
												98,
												99
											]
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 159,
											"character": 19
										},
										{
											"fileName": "log.ts",
											"line": 160,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 161,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 162,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										97
									]
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 158,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								107
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								106,
								105,
								103,
								104,
								92,
								95,
								89,
								93,
								94,
								91,
								90,
								102,
								101
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								110
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								148,
								118,
								130,
								142,
								163,
								124,
								155,
								114,
								133,
								137,
								145,
								121,
								127
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								96
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 139,
							"character": 16
						}
					]
				},
				{
					"id": 81,
					"name": "LevelDesc",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type definition for level descriptors"
					},
					"children": [
						{
							"id": 84,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 64
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 82,
							"name": "importance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 83,
							"name": "sym",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								84,
								82,
								83
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 129,
							"character": 26
						}
					]
				},
				{
					"id": 85,
					"name": "Msg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 86,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 132,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 87,
							"name": "msg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 133,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								86,
								87
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 131,
							"character": 13
						}
					]
				},
				{
					"id": 169,
					"name": "COLOR",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 192,
							"name": "bgBlack",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 116,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#000;\""
						},
						{
							"id": 196,
							"name": "bgBlue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#00f;\""
						},
						{
							"id": 198,
							"name": "bgCyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 122,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#0ff;\""
						},
						{
							"id": 194,
							"name": "bgGreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 118,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#0f0;\""
						},
						{
							"id": 197,
							"name": "bgMagenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 121,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#f0f;\""
						},
						{
							"id": 193,
							"name": "bgRed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 117,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#f00;\""
						},
						{
							"id": 199,
							"name": "bgWhite",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 123,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#fff;\""
						},
						{
							"id": 195,
							"name": "bgYellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 119,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#ff0;\""
						},
						{
							"id": 177,
							"name": "black",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#000;\""
						},
						{
							"id": 174,
							"name": "blink",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 95,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 181,
							"name": "blue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 103,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#00f;\""
						},
						{
							"id": 171,
							"name": "bold",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 92,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"font-weight:bold;\""
						},
						{
							"id": 170,
							"name": "clear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 90,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#000; background-color:inherit; font-weight:normal;\""
						},
						{
							"id": 183,
							"name": "cyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 105,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#0ff;\""
						},
						{
							"id": 188,
							"name": "darkblue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 111,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#008;\""
						},
						{
							"id": 190,
							"name": "darkcyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 113,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#088;\""
						},
						{
							"id": 186,
							"name": "darkgreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 109,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#080;\""
						},
						{
							"id": 189,
							"name": "darkmagenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 112,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#808;\""
						},
						{
							"id": 185,
							"name": "darkred",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 108,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#800;\""
						},
						{
							"id": 187,
							"name": "darkyellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 110,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#880;\""
						},
						{
							"id": 172,
							"name": "dim",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 93,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 191,
							"name": "gray",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 114,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#888;\""
						},
						{
							"id": 179,
							"name": "green",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 101,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#0f0;\""
						},
						{
							"id": 176,
							"name": "hidden",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 97,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 182,
							"name": "magenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 104,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#f0f;\""
						},
						{
							"id": 178,
							"name": "red",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 100,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#f00;\""
						},
						{
							"id": 175,
							"name": "reverse",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 96,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 173,
							"name": "underscore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 94,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 184,
							"name": "white",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#fff;\""
						},
						{
							"id": 180,
							"name": "yellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 102,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#ff0;\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								192,
								196,
								198,
								194,
								197,
								193,
								199,
								195,
								177,
								174,
								181,
								171,
								170,
								183,
								188,
								190,
								186,
								189,
								185,
								187,
								172,
								191,
								179,
								176,
								182,
								178,
								175,
								173,
								184,
								180
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 89,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						88
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						81,
						85
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						169
					]
				}
			],
			"sources": [
				{
					"fileName": "log.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 209,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/overview.ts",
			"comment": {
				"shortText": "# hsUtil",
				"text": "Helpful Scripts utility functions for use in both browser and `node` environments\n<a href=\"./data/src/hsUtil/coverage/\" target=\"_blank\">[Coverage Info]</a>\n\n[![npm version](https://badge.fury.io/js/hsutil.svg)](https://badge.fury.io/js/hsutil)\n[![GitHub](https://img.shields.io/badge/GitHub-hsUtil-blue.svg)](https://github.com/helpfulscripts/hsutil)\n[![docs](https://img.shields.io/badge/hsDocs-hsUtil-blue.svg)](https://helpfulscripts.github.io/hsUtil/#!/api/hsUtil/0)\n[![Build Status](https://travis-ci.org/HelpfulScripts/hsUtil.svg?branch=master)](https://travis-ci.org/HelpfulScripts/hsUtil)\n[![Dependencies Status](https://david-dm.org/helpfulscripts/hsutil.svg)](https://david-dm.org/helpfulscripts/hsutil)\n[![codecov](https://codecov.io/gh/HelpfulScripts/hsUtil/branch/master/graph/badge.svg)](https://codecov.io/gh/HelpfulScripts/hsUtil)\n[![Known Vulnerabilities](https://snyk.io/test/github/HelpfulScripts/hsUtil/badge.svg?targetFile=package.json)](https://snyk.io/test/github/HelpfulScripts/hsUtil?targetFile=package.json)\n[![NPM License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://www.npmjs.com/package/hsutil)\n\n___\n\n## Index - no external dependencies:\n- &nbsp; {@link log log} module-level logging\n- &nbsp; {@link Pacing Pacing} functions that provide delays and timeouts for promises.\n- &nbsp; {@link Date Date} printf-style date formatting function\n- &nbsp; {@link Checksum Checksum} a quick checksum implementation for small strings\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				7,
				11,
				47,
				200,
				80,
				209
			]
		}
	]
}