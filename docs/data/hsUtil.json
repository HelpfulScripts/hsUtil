{
	"id": 0,
	"name": "hsUtil",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"Array\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Array.ts",
			"comment": {
				"shortText": "### Array extensions."
			},
			"children": [
				{
					"id": 2,
					"name": "uniquefy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "uniquefy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "takes an `array` of elements of object literal type `<T>`, then sorts out any duplicate elements\nwith respect to a `key`. For an `array` od primitive type (`string`, `number`), `key` is ignored.\n### Example: object literals of type `<T>`\n```\nconst Values = [\n   {id: 1, b: 'first element'},\n   {id: 2, b: 'second element'},\n   {id: 3, b: 'third element'},\n   {id: 1, b: 'first element'},\n];",
								"text": "const u = uniquefy(Values, 'id');\n//=> [{id: 1, b: 'first element'}, {id: 2, b: 'second element'}, {id: 3, b: 'third element'}]\n```\n\n### Example: array of `string` or `number`\n```\nconst Values = [0, 1, 2, 0, 3, 2, 4];\n\nconst u = uniquefy(Values);\n//=> [0, 1, 2, 3, 4]\n```",
								"returns": "an array containing only unique elements of the original `array`\n"
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "an array of elements of type `T`, some of which may be duplicates."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 6,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "the field in the element object to use as key. `T[key]` must be a `string` or `number`."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "Array.ts",
							"line": 33,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "Array.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 414,
			"name": "\"Auth\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Auth.ts",
			"children": [
				{
					"id": 415,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 418,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 419,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 420,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 421,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 415,
										"name": "Auth"
									}
								}
							],
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 20
								}
							]
						},
						{
							"id": 417,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 416,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 5,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 422,
							"name": "testAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 423,
									"name": "testAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 424,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 425,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ArrayBuffer"
													}
												]
											}
										},
										{
											"id": 426,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 298,
												"name": "IncomingMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 284,
										"name": "Options"
									}
								}
							],
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 13,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								418
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								417,
								416
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								422
							]
						}
					],
					"sources": [
						{
							"fileName": "Auth.ts",
							"line": 4,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 227,
							"name": "AuthDigest"
						},
						{
							"type": "reference",
							"id": 264,
							"name": "AuthBasic"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 263,
			"name": "\"AuthBasic\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/AuthBasic.ts",
			"children": [
				{
					"id": 264,
					"name": "AuthBasic",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 272,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 273,
									"name": "new AuthBasic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 274,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 275,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 264,
										"name": "AuthBasic"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 244,
										"name": "Auth.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 244,
								"name": "Auth.__constructor"
							}
						},
						{
							"id": 271,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 243,
								"name": "Auth.password"
							}
						},
						{
							"id": 270,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 5,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 242,
								"name": "Auth.username"
							}
						},
						{
							"id": 265,
							"name": "testAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 266,
									"name": "testAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 267,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 268,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 269,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 298,
												"name": "IncomingMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 284,
										"name": "Options"
									},
									"overwrites": {
										"type": "reference",
										"id": 422,
										"name": "Auth.testAuth"
									}
								}
							],
							"sources": [
								{
									"fileName": "AuthBasic.ts",
									"line": 8,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 422,
								"name": "Auth.testAuth"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								272
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								271,
								270
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								265
							]
						}
					],
					"sources": [
						{
							"fileName": "AuthBasic.ts",
							"line": 7,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 415,
							"name": "Auth"
						}
					]
				},
				{
					"id": 276,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "AuthBasic.ts",
							"line": 1,
							"character": 53
						}
					],
					"type": {
						"type": "reference",
						"id": 51,
						"name": "Log"
					},
					"defaultValue": "new Log('RequestBasic')"
				},
				{
					"id": 280,
					"name": "_atob",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 281,
							"name": "_atob",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 282,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthBasic.ts",
							"line": 20,
							"character": 14
						}
					]
				},
				{
					"id": 277,
					"name": "_btoa",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 278,
							"name": "_btoa",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 279,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthBasic.ts",
							"line": 15,
							"character": 14
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						264
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						276
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						280,
						277
					]
				}
			],
			"sources": [
				{
					"fileName": "AuthBasic.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 226,
			"name": "\"AuthDigest\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/AuthDigest.ts",
			"children": [
				{
					"id": 227,
					"name": "AuthDigest",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Implements a Digest authentication, used in {@link request `request`} call."
					},
					"children": [
						{
							"id": 244,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 245,
									"name": "new AuthDigest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 246,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 247,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 227,
										"name": "AuthDigest"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 244,
										"name": "Auth.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 244,
								"name": "Auth.__constructor"
							}
						},
						{
							"id": 228,
							"name": "nc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AuthDigest.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 243,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 243,
								"name": "Auth.password"
							}
						},
						{
							"id": 242,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Auth.ts",
									"line": 5,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 242,
								"name": "Auth.username"
							}
						},
						{
							"id": 231,
							"name": "generateCNONCE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 232,
									"name": "generateCNONCE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Parse challenge digest"
									},
									"parameters": [
										{
											"id": 233,
											"name": "qop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 234,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 235,
													"name": "cnonce",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "AuthDigest.ts",
															"line": 39,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": "cnonce"
												},
												{
													"id": 236,
													"name": "nc",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "AuthDigest.ts",
															"line": 39,
															"character": 34
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "nc"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														235,
														236
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "AuthDigest.ts",
									"line": 29,
									"character": 18
								}
							]
						},
						{
							"id": 237,
							"name": "testAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 238,
									"name": "testAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 239,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 240,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 241,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"id": 298,
												"name": "IncomingMessage"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 284,
										"name": "Options"
									},
									"overwrites": {
										"type": "reference",
										"id": 422,
										"name": "Auth.testAuth"
									}
								}
							],
							"sources": [
								{
									"fileName": "AuthDigest.ts",
									"line": 48,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 422,
								"name": "Auth.testAuth"
							}
						},
						{
							"id": 229,
							"name": "updateNC",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 230,
									"name": "updateNC",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Update and zero pad nc"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "AuthDigest.ts",
									"line": 17,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								244
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								228,
								243,
								242
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								231,
								237,
								229
							]
						}
					],
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 11,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 415,
							"name": "Auth"
						}
					]
				},
				{
					"id": 248,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 1,
							"character": 53
						}
					],
					"type": {
						"type": "reference",
						"id": 51,
						"name": "Log"
					},
					"defaultValue": "new Log('RequestDigest')"
				},
				{
					"id": 253,
					"name": "compileParams",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 254,
							"name": "compileParams",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compose authorization header"
							},
							"parameters": [
								{
									"id": 255,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 99,
							"character": 22
						}
					]
				},
				{
					"id": 249,
					"name": "omitNull",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 250,
							"name": "omitNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 251,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 252,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 87,
							"character": 17
						}
					]
				},
				{
					"id": 259,
					"name": "parseDigestResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 260,
							"name": "parseDigestResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 261,
									"name": "digestHeader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 262,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 118,
							"character": 28
						}
					]
				},
				{
					"id": 256,
					"name": "putDoubleQuotes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 257,
							"name": "putDoubleQuotes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "return `true` if double quotes are needed for `entry`"
							},
							"parameters": [
								{
									"id": 258,
									"name": "entry",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "AuthDigest.ts",
							"line": 114,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						227
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						248
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						253,
						249,
						259,
						256
					]
				}
			],
			"sources": [
				{
					"fileName": "AuthDigest.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 427,
			"name": "\"Checksum\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Checksum.ts",
			"comment": {
				"shortText": "Creates a checksum on a string.\nAdapted from https://stackoverflow.com/questions/811195/fast-open-source-checksum-for-small-strings"
			},
			"children": [
				{
					"id": 428,
					"name": "shortCheckSum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 429,
							"name": "shortCheckSum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "fast implementation for short strings (20-500 chars)"
							},
							"parameters": [
								{
									"id": 430,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Checksum.ts",
							"line": 9,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						428
					]
				}
			],
			"sources": [
				{
					"fileName": "Checksum.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 7,
			"name": "\"Date\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Date.ts",
			"comment": {
				"shortText": "# Date formatting support.\nFormats are specified in a printf-style format string.\n## Supported Formats\n- `%YY, %YYYY`           : two- or four-digit year, as '73', '1973'\n- `%M, %MM, %MMM, %MMMM` : month of year as '2', '02', 'Feb', 'February'\n- `%D, %DD`              : day of month as '5', '05' (1...31)\n- `%DDD, %DDDD`          : day of week as 'Tue', 'Tuesday'\n- `%h, %hh`              : hour of day as '7', '07 (0...23)\n- `%m, %mm`              : minutes as '6', '06' (0..59)\n- `%ss`                  : seconds as '09' (0...59)\n- `%j, %jj, %jjj`        : milliseconds as '1', '15', '159'"
			},
			"children": [
				{
					"id": 9,
					"name": "dayStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long weekday names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": "[\n    ['Sun', 'Sunday'],['Mon', 'Monday'],['Tue', 'Tuesday'],['Wed', 'Wednesday'],['Thu', 'Thursday'],['Fri', 'Friday'],['Sat', 'Saturday']]"
				},
				{
					"id": 8,
					"name": "monthStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long month names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": "[\n    ['Jan', 'January'], ['Feb', 'February'], ['Mar', 'March'], ['Apr', 'April'], ['May', 'May'], ['Jun', 'June'],\n    ['Jul', 'July'], ['Aug', 'August'], ['Sep', 'September'], ['Oct', 'October'], ['Nov', 'November'], ['Dec', 'December']]"
				},
				{
					"id": 14,
					"name": "date",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 15,
							"name": "date",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "## Example:\n<pre>\ndate('%MM/%DD/%YY');           // -> 08/17/16 (using current date)\nlet d = new Date('7/4/2010');\ndate('%DDDD, %MM/%DD/%YY', d); // -> Sunday, 07/04/10\n</pre>",
								"returns": "a copy of `formatString` where all supported patterns are replaced by the respective values from `date`.\n"
							},
							"parameters": [
								{
									"id": 16,
									"name": "formatString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the format string to use."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17,
									"name": "date",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"defaultValue": "new Date()"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 43,
							"character": 20
						}
					]
				},
				{
					"id": 10,
					"name": "formatNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 11,
							"name": "formatNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "add leading zeros to an integer until `digits` are reached"
							},
							"parameters": [
								{
									"id": 12,
									"name": "number",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 13,
									"name": "digits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 25,
							"character": 21
						}
					]
				},
				{
					"id": 18,
					"name": "ms",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "converts minutes, hours, days, weeks ... into milliseconds and back"
					},
					"children": [
						{
							"id": 25,
							"name": "fromDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 26,
									"name": "fromDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 27,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 71,
									"character": 12
								}
							]
						},
						{
							"id": 22,
							"name": "fromHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 23,
									"name": "fromHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 24,
											"name": "h",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 70,
									"character": 13
								}
							]
						},
						{
							"id": 19,
							"name": "fromMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 20,
									"name": "fromMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 21,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 69,
									"character": 15
								}
							]
						},
						{
							"id": 28,
							"name": "fromWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 29,
									"name": "fromWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 30,
											"name": "w",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 72,
									"character": 13
								}
							]
						},
						{
							"id": 37,
							"name": "toDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 38,
									"name": "toDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 39,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 75,
									"character": 10
								}
							]
						},
						{
							"id": 34,
							"name": "toHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 35,
									"name": "toHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 36,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 74,
									"character": 11
								}
							]
						},
						{
							"id": 31,
							"name": "toMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "toMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 33,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 73,
									"character": 13
								}
							]
						},
						{
							"id": 40,
							"name": "toWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "toWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 42,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 76,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								25,
								22,
								19,
								28,
								37,
								34,
								31,
								40
							]
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 68,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						9,
						8
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						14,
						10
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "Date.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 167,
			"name": "\"Pacing\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Pacing.ts",
			"children": [
				{
					"id": 168,
					"name": "Pace",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "paces a series of similar function calls to\n- not occur faster than a preset rate\n- not issue more unresolved calls then a preset limit\n- wait for a `collectionPeriod` before executing the call. During this period a new call with the\nsame key will kick the call back to the end of the queue. This mechanism resolves\na series of repeated calls to the same resource into only the last call.",
						"text": "<p>\n**Usage:**\n```\nconst q = new PacingQueue({pace:100, maxConcurrent:10}); // 100ms between calls, at most 10 unresolved\n...\nconst result = await q.add((ms) => `I have been called after ${ms}ms`;})\nconsole.log(result));     // prints: I have been called after 105ms`\n```\n"
					},
					"children": [
						{
							"id": 181,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 182,
									"name": "new Pace",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 183,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 184,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 187,
															"name": "collectionPeriod",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "time in ms to wait with issuing each execution call; defaults to 0.\n"
															},
															"sources": [
																{
																	"fileName": "Pacing.ts",
																	"line": 106,
																	"character": 61
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "0"
														},
														{
															"id": 186,
															"name": "maxConcurrent",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "the maximum number of concurrent execution calls; defaults to -1 (no limit)."
															},
															"sources": [
																{
																	"fileName": "Pacing.ts",
																	"line": 106,
																	"character": 40
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "-1"
														},
														{
															"id": 185,
															"name": "pace",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "the minimum number of milliseconds between successive execution calls; defaults to 100."
															},
															"sources": [
																{
																	"fileName": "Pacing.ts",
																	"line": 106,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "100"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																187,
																186,
																185
															]
														}
													],
													"sources": [
														{
															"fileName": "Pacing.ts",
															"line": 106,
															"character": 16
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 168,
										"name": "Pace"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 99,
									"character": 32
								}
							]
						},
						{
							"id": 180,
							"name": "collectionPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "time in ms to wait with issuing the `CallFunction`. During this time,\na new `CallFunction` call for the same `key` will replace the previous one. This mechanism resolves\na series of repeated calls to the same resource into only the last call.\nSpecify <= 0 to disable."
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 99,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 169,
							"name": "maxConcurrent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "max number of concurrent requests being called"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 75,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "-1"
						},
						{
							"id": 170,
							"name": "pace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the pace of calls in ms"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 77,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 174,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the queue holding callback `Items`"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 85,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 175,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 176,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 177,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 209,
												"name": "Item"
											}
										}
									]
								}
							},
							"defaultValue": "<{[key:string]:Item}>{}"
						},
						{
							"id": 173,
							"name": "started",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "functions that have been called, but have not resolved yet."
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 83,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 171,
							"name": "waitUntil",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the earliest time for the next call"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 79,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 172,
							"name": "waiting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the number of items waiting in queue"
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 81,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 198,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 199,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "adds the function to the queue. After an appropriate time has passed,\nthe function will be called with the delay in ms as parameter.",
										"returns": "a promise that resolved to the result of the function\n"
									},
									"parameters": [
										{
											"id": 200,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 206,
												"name": "CallFunction"
											}
										},
										{
											"id": 201,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 127,
									"character": 13
								}
							]
						},
						{
							"id": 196,
							"name": "inProgress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "inProgress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "functions that have been called, but have not resolved yet."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 119,
									"character": 21
								}
							]
						},
						{
							"id": 194,
							"name": "inQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 195,
									"name": "inQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "number of functions currently waiting in queue"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 117,
									"character": 18
								}
							]
						},
						{
							"id": 178,
							"name": "isAllowed",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 179,
									"name": "isAllowed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "tests if a new call can be issued.",
										"returns": "`true` if `maxConcurrent` is disabled, or fewer than the allowed calls have been issued\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 91,
									"character": 20
								}
							]
						},
						{
							"id": 202,
							"name": "resolveItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 203,
									"name": "resolveItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 204,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 209,
												"name": "Item"
											}
										},
										{
											"id": 205,
											"name": "waitTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 148,
									"character": 23
								}
							]
						},
						{
							"id": 191,
							"name": "setMaxConcurrent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 192,
									"name": "setMaxConcurrent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "max number of concurrent requests being called"
									},
									"parameters": [
										{
											"id": 193,
											"name": "maxConcurrent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 115,
									"character": 27
								}
							]
						},
						{
							"id": 188,
							"name": "setPace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 189,
									"name": "setPace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "the pace of calls in ms"
									},
									"parameters": [
										{
											"id": 190,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 113,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								181
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								180,
								169,
								170,
								174,
								173,
								171,
								172
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								198,
								196,
								194,
								178,
								202,
								191,
								188
							]
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 73,
							"character": 17
						}
					]
				},
				{
					"id": 206,
					"name": "CallFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 207,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 208,
									"name": "msSinceAdding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 181,
							"character": 22
						}
					]
				},
				{
					"id": 209,
					"name": "Item",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 211,
							"name": "added",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 185,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 210,
							"name": "fn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 184,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 206,
								"name": "CallFunction"
							}
						},
						{
							"id": 214,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 188,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 213,
							"name": "pace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 187,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 168,
								"name": "Pace"
							}
						},
						{
							"id": 212,
							"name": "timer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "Pacing.ts",
									"line": 186,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Timeout"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								211,
								210,
								214,
								213,
								212
							]
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 183,
							"character": 14
						}
					]
				},
				{
					"id": 215,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 5,
							"character": 39
						}
					],
					"type": {
						"type": "reference",
						"id": 51,
						"name": "Log"
					},
					"defaultValue": "new Log('Pacing')"
				},
				{
					"id": 223,
					"name": "belowConcurrentLimit",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 224,
							"name": "belowConcurrentLimit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 225,
									"name": "pace",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 168,
										"name": "Pace"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 172,
							"character": 29
						}
					]
				},
				{
					"id": 220,
					"name": "delay",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 221,
							"name": "delay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "promise-based delay function. Delays execution in a promise chain, passing the parameter\nreceived from the calling promise down to the resolving promise.\n```\ndelay(10)(param)\n   .then(param => {...})\n   .catch(...)\n```\nor: insert delay within the `then` chain:\n```\n<PromiseLike>\n   .then(a => { ... return b; })\n   .then(delay(10))\n   .then(b => { ... })\n   .catch(...)\n```\nor as an async/await pattern:\n```\ntry {\n   await <PromiseLike>\n   ...\n   await delay(10)\n   ...\n} catch(e) {\n   ...\n}\n```",
								"returns": "a `Promise` that resolves after `ms`\n"
							},
							"parameters": [
								{
									"id": 222,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 48,
							"character": 21
						}
					]
				},
				{
					"id": 216,
					"name": "timeout",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 217,
							"name": "timeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "timeout promise for use in `Promise.race()`.",
								"returns": "a Promise that rejects after `ms`\n"
							},
							"parameters": [
								{
									"id": 218,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the milliseconds to wait before rejecting"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 219,
									"name": "rest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "Pacing.ts",
							"line": 14,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						168
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						206,
						209
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						215
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						223,
						220,
						216
					]
				}
			],
			"sources": [
				{
					"fileName": "Pacing.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 283,
			"name": "\"Request\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Request.ts",
			"comment": {
				"shortText": "Utility functions for HTTP and HTTPS GET, PUT, and POST. The module wraps a standard `XMLHttpRequest` and provides support for\n- simple authentication methods,\n- decoding of received content.\n- request pacing",
				"text": "### Authentication\nAuthentication is enabled by setting {@link Request.Request.setCredentials `request.setCredentials`} before any call to\n{@link Request.Request.get `request.get`} or {@link Request.Request.post `request.post`}.\nThe following authentication schemes are currently supported:\n- Basic\n- Digest\n\n### Decoding\nContent received from a server or a cache can be decoded before returning the result.\nDecoding is disabled by default and can be enabled by setting a `Decoder` function:\n`request.decode = Request.decoders.str2json`\n\nFor convenience, the following predefined decoder functions are provided as static members of `Request.decoders`:\n- str2json applies JSON.parse to the content to return an object literal\n- html2json applies (html2json)[https://github.com/jxck/html2json#readme] to the content\n\n### Pacing\nEnable request pacing via `request.setPace(ms, max)`. When enabled, requests will be issued with a minimal\namount of `ms` milliseconds between them, and there will never be more than `max` number of calls pending.\nAll additional calls will be placed in a queue until the `ms` abd `max` conditions allow calling them.\n\n### Usage:\n```\nimport { Request } from 'hsnode';\nconst request = new Request.Request();\nrequest.cache = __dirname + '/../_data/cache';\nrequest.decode = (options:http.Options) => options.path.indexOf('binData?id=') < 0;\nrequest.setAuthToken(apptokens.token);\nconst content = await request.get('http://...');\n```\n"
			},
			"children": [
				{
					"id": 312,
					"name": "Request",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 327,
							"name": "authToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the `AuthToken` to set in the header"
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 122,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 328,
							"name": "cache",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the location to use for caching. Set this property to the caching directory, e.g.:\n`request.cache = './bin'`, ommitting a trailing `/`.\nTo disable caching, set it to `undefined`."
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 129,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 323,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the credentials to use for authentication, or `undefined`"
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 119,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 324,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 326,
											"name": "password",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Request.ts",
													"line": 119,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 325,
											"name": "user",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Request.ts",
													"line": 119,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												326,
												325
											]
										}
									],
									"sources": [
										{
											"fileName": "Request.ts",
											"line": 119,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 343,
							"name": "decode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets an optional decode function for retrieved content. The function will be\napplied to content retrieved either from the cache or from the server response.\nConvenience function are available via the static list `Request.decoders`.\nFor example, `request.decode = Request.decoders.str2json"
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 160,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 308,
								"name": "Decoder"
							},
							"defaultValue": "<Decoder>undefined"
						},
						{
							"id": 321,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the `log` facility to use"
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 113,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 51,
								"name": "Log"
							},
							"defaultValue": "log"
						},
						{
							"id": 322,
							"name": "pace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the pacing queue used to manage request flow"
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 116,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 168,
								"name": "Pace"
							}
						},
						{
							"id": 344,
							"name": "cacheName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "constructs the cache name to use. The function call can be overwritten with\na custom function to modify cache locations.\nThis default implementation uses the `path` element in `Options` to create\nrequired subdirectories underneath the `cache` location."
							},
							"signatures": [
								{
									"id": 345,
									"name": "cacheName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "constructs the cache name to use. The function call can be overwritten with\na custom function to modify cache locations.\nThis default implementation uses the `path` element in `Options` to create\nrequired subdirectories underneath the `cache` location."
									},
									"parameters": [
										{
											"id": 346,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "the request options\n"
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 169,
									"character": 20
								}
							]
						},
						{
							"id": 380,
							"name": "decodedRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 381,
									"name": "decodedRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "issues a `GET` or `POST` call and returns the `url` response.\nIf `usedCache` is `true`, the cached version will be returned if available.\nOtherwise an `http` or `https` request is initiated, the result cached and returned.\nIf `decode` is defined it is called with the retrieved data before returning the result."
									},
									"parameters": [
										{
											"id": 382,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 383,
											"name": "useCached",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "if `true`, attempt to return a cahced version. If `false`, or no cached version\nexists, a remote call will be attempted."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 384,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 385,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "data to submit for a `POST` call\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 244,
									"character": 34
								}
							]
						},
						{
							"id": 347,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 348,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "gets the content for the addressed `url`. `HTTP` and `HTTPS` are supported.",
										"returns": "a promise that resolves to a `Response` if the reuqest is successful\nand that rejects with an error message if not.\n"
									},
									"parameters": [
										{
											"id": 349,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the address to fetch from"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL"
													}
												]
											}
										},
										{
											"id": 350,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 351,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 353,
															"name": "headers",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 181,
																	"character": 61
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 354,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															}
														},
														{
															"id": 352,
															"name": "useCached",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "optional, defaults to `true`. Set to `false` to avoid using\nthe cache for this call in case caching is enabled."
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 181,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																353,
																352
															]
														}
													],
													"sources": [
														{
															"fileName": "Request.ts",
															"line": 181,
															"character": 36
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 181,
									"character": 20
								}
							]
						},
						{
							"id": 376,
							"name": "getOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 377,
									"name": "getOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 378,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL"
													}
												]
											}
										},
										{
											"id": 379,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 413,
												"name": "Method"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 284,
										"name": "Options"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 214,
									"character": 24
								}
							]
						},
						{
							"id": 373,
							"name": "getURL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 374,
									"name": "getURL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 375,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "URL"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 210,
									"character": 20
								}
							]
						},
						{
							"id": 406,
							"name": "isTextualContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 407,
									"name": "isTextualContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 408,
											"name": "contentType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 365,
									"character": 30
								}
							]
						},
						{
							"id": 409,
							"name": "isTextualRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 410,
									"name": "isTextualRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 411,
											"name": "pathName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 393,
									"character": 30
								}
							]
						},
						{
							"id": 402,
							"name": "issueRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 403,
									"name": "issueRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 404,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 405,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 321,
									"character": 32
								}
							]
						},
						{
							"id": 364,
							"name": "post",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "post",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "posts the content in `postData` to the server at the address specified by `url`.",
										"returns": "a promise that resolves to a `Response` if the reuqest is successful\nand that rejects with an error message if not.\n"
									},
									"parameters": [
										{
											"id": 366,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the address to post to"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL"
													}
												]
											}
										},
										{
											"id": 367,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the data to post"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 368,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 369,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 371,
															"name": "headers",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 205,
																	"character": 77
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 372,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															}
														},
														{
															"id": 370,
															"name": "useCached",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 205,
																	"character": 62
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																371,
																370
															]
														}
													],
													"sources": [
														{
															"fileName": "Request.ts",
															"line": 205,
															"character": 51
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 205,
									"character": 21
								}
							]
						},
						{
							"id": 355,
							"name": "put",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 356,
									"name": "put",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "posts the content in `postData` to the server at the address specified by `url`.",
										"returns": "a promise that resolves to a `Response` if the reuqest is successful\nand that rejects with an error message if not.\n"
									},
									"parameters": [
										{
											"id": 357,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the address to post to"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "URL"
													}
												]
											}
										},
										{
											"id": 358,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the data to post"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 359,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__2",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 360,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 362,
															"name": "headers",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 193,
																	"character": 76
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 363,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	}
																}
															}
														},
														{
															"id": 361,
															"name": "useCached",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 193,
																	"character": 61
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																362,
																361
															]
														}
													],
													"sources": [
														{
															"fileName": "Request.ts",
															"line": 193,
															"character": 50
														}
													]
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 193,
									"character": 20
								}
							]
						},
						{
							"id": 386,
							"name": "readCached",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 387,
									"name": "readCached",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "attempts to read a cached file and returns `undefined` if none is found.\nThe attempt consists of two steps:\n- return a file named `<fname>.txt` as a text file, if available\n- return a file names `<fname>.bin` as a binary file, if available"
									},
									"parameters": [
										{
											"id": 388,
											"name": "fname",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the path and name of the file, without extension\n\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 260,
									"character": 30
								}
							]
						},
						{
							"id": 398,
							"name": "request",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "request",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 400,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 401,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 295,
									"character": 27
								}
							]
						},
						{
							"id": 393,
							"name": "requestOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 394,
									"name": "requestOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 395,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 284,
												"name": "Options"
											}
										},
										{
											"id": 396,
											"name": "useCached",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 397,
											"name": "postData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 267,
									"character": 34
								}
							]
						},
						{
							"id": 333,
							"name": "setAuthToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets an authentication token that is passed on to the server via a header field `AuthToken`"
							},
							"signatures": [
								{
									"id": 334,
									"name": "setAuthToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets an authentication token that is passed on to the server via a header field `AuthToken`"
									},
									"parameters": [
										{
											"id": 335,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 141,
									"character": 23
								}
							]
						},
						{
							"id": 329,
							"name": "setCredentials",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets the credentials for `Basic` and `Digest` authentications."
							},
							"signatures": [
								{
									"id": 330,
									"name": "setCredentials",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the credentials for `Basic` and `Digest` authentications."
									},
									"parameters": [
										{
											"id": 331,
											"name": "user",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "the username to use; if `undefined`, then authentication will be disabled."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 332,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "the password to use\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 136,
									"character": 25
								}
							]
						},
						{
							"id": 336,
							"name": "setPace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets a `Pace` for the requests:"
							},
							"signatures": [
								{
									"id": 337,
									"name": "setPace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets a `Pace` for the requests:"
									},
									"parameters": [
										{
											"id": 338,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 339,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 342,
															"name": "collectionPeriod",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 150,
																	"character": 56
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "100"
														},
														{
															"id": 341,
															"name": "max",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 150,
																	"character": 35
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "10"
														},
														{
															"id": 340,
															"name": "pace",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "Request.ts",
																	"line": 150,
																	"character": 27
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"defaultValue": "50"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																342,
																341,
																340
															]
														}
													],
													"sources": [
														{
															"fileName": "Request.ts",
															"line": 150,
															"character": 22
														}
													]
												}
											},
											"defaultValue": "{pace:<any>undefined}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 150,
									"character": 18
								}
							]
						},
						{
							"id": 389,
							"name": "writeCached",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 390,
									"name": "writeCached",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 391,
											"name": "fname",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 392,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 295,
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 264,
									"character": 31
								}
							]
						},
						{
							"id": 313,
							"name": "decoders",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 317,
									"name": "html2json",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Request.ts",
											"line": 109,
											"character": 17
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 318,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 319,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 320,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									},
									"defaultValue": "<(data:string) => any>undefined"
								},
								{
									"id": 314,
									"name": "str2json",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 315,
											"name": "str2json",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 316,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "Request.ts",
											"line": 108,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										317
									]
								},
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										314
									]
								}
							],
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 107,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								327,
								328,
								323,
								343,
								321,
								322
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								344,
								380,
								347,
								376,
								373,
								406,
								409,
								402,
								364,
								355,
								386,
								398,
								393,
								333,
								329,
								336,
								389
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								313
							]
						}
					],
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 106,
							"character": 20
						}
					]
				},
				{
					"id": 308,
					"name": "Decoder",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "decoder function interface. For the given `Options` and data a function implementation\nshoul;d return a decoded version of `data`."
					},
					"signatures": [
						{
							"id": 309,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "decoder function, returns a decoded version of `data`",
								"returns": "a decoded version of `data`\n"
							},
							"parameters": [
								{
									"id": 310,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the data to decode"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 311,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "the `Options` structure used to place the request"
									},
									"type": {
										"type": "reference",
										"id": 284,
										"name": "Options"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 95,
							"character": 24
						}
					]
				},
				{
					"id": 298,
					"name": "IncomingMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Describes an incoming message; used in `Digest.testDigestAuth`"
					},
					"children": [
						{
							"id": 300,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 79,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 302,
											"name": "content-type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "Request.ts",
													"line": 79,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												302
											]
										}
									],
									"sources": [
										{
											"fileName": "Request.ts",
											"line": 79,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 303,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 81,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 304,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 84,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 305,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 85,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 306,
							"name": "statusMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 86,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 299,
							"name": "txt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 78,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 307,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 87,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								300,
								303,
								304,
								305,
								306,
								299,
								307
							]
						}
					],
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 77,
							"character": 32
						}
					]
				},
				{
					"id": 284,
					"name": "Options",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 293,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 62,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 288,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 289,
							"name": "hostname",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 58,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 286,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 55,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 413,
								"name": "Method"
							}
						},
						{
							"id": 292,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 291,
							"name": "pathname",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 60,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 290,
							"name": "port",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 287,
							"name": "protocol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 56,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 294,
							"name": "rejectUnauthorized",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 63,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 285,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 54,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								293,
								288,
								289,
								286,
								292,
								291,
								290,
								287,
								294,
								285
							]
						}
					],
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 53,
							"character": 24
						}
					]
				},
				{
					"id": 295,
					"name": "Response",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "general HTTP response structure"
					},
					"children": [
						{
							"id": 297,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 71,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ArrayBuffer"
									}
								]
							}
						},
						{
							"id": 296,
							"name": "response",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Request.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 298,
								"name": "IncomingMessage"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								297,
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 69,
							"character": 25
						}
					]
				},
				{
					"id": 413,
					"name": "Method",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 49,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "GET"
							},
							{
								"type": "stringLiteral",
								"value": "POST"
							},
							{
								"type": "stringLiteral",
								"value": "PUT"
							}
						]
					}
				},
				{
					"id": 412,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "Request.ts",
							"line": 41,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"id": 51,
						"name": "Log"
					},
					"defaultValue": "new Log('Request')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						312
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						308,
						298,
						284,
						295
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						413
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						412
					]
				}
			],
			"sources": [
				{
					"fileName": "Request.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 431,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/index.ts",
			"children": [
				{
					"id": 439,
					"name": "Decoder",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 308
				},
				{
					"id": 438,
					"name": "IncomingMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 298
				},
				{
					"id": 444,
					"name": "LevelDesc",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 44
				},
				{
					"id": 445,
					"name": "Log",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 51
				},
				{
					"id": 435,
					"name": "Method",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 413
				},
				{
					"id": 436,
					"name": "Options",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 284
				},
				{
					"id": 434,
					"name": "Pace",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 168
				},
				{
					"id": 440,
					"name": "Request",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 312
				},
				{
					"id": 437,
					"name": "Response",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 295
				},
				{
					"id": 442,
					"name": "date",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 14
				},
				{
					"id": 433,
					"name": "delay",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 220
				},
				{
					"id": 443,
					"name": "ms",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 18
				},
				{
					"id": 441,
					"name": "shortCheckSum",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 428
				},
				{
					"id": 432,
					"name": "timeout",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 216
				},
				{
					"id": 446,
					"name": "uniquefy",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						439,
						438,
						444,
						445,
						435,
						436,
						434,
						440,
						437,
						442,
						433,
						443,
						441,
						432,
						446
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 43,
			"name": "\"log\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/log.ts",
			"comment": {
				"shortText": "Logging convenience functions.\n## Usage",
				"text": "### Using the global `Log` instance\nSettings in `Log.log` are shared across modules\n```\nimport { Log } from 'hsutil'; const log = Log.log;\nlog.level(Log.INFO);         // sets the reporting level on the global instance\nlog.info('by the way:');     // -> 20160817 09:59:08.032 info by the way:\nlog.info(()=>'by the way:'); // -> 20160817 09:59:08.032 info by the way:\nlog.error('oh dear!');       // -> 20160817 09:59:08.045 error *** oh dear!\n```\n\n### Using a local `Log` instance\nCreate a new `Log` instance to keep changes local to the current module:\n```\nimport { Log } from 'hsutil';\nconst log = new Log('myModule');\nlog.info('by the way:'); // -> 20160817 09:59:08.032 myModule info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 myModule error *** oh dear!\n```\n\n### Using the `format` template:\n```\nlog.format('%MMM %DD %hh%mm%ss');\nlog.info('by the way:');  // -> Aug 17 095908 info by the way:\nlog.error('oh dear!');    // -> Aug 17 095908 error *** oh dear!\n```\n\n### Change the module prefix:\n```\nlog.prefix('Main');\nlog.format('%hh%mm%ss');\nlog.info('by the way:');  // -> 09:59:08.032 Main info by the way:\nlog.error('oh dear!');    // -> 09:59:08.045 Main error *** oh dear!\n```\n\n### Setting the Log level locally for the module\n```\nlog.level(log.WARN);\nlog.info('this will not be reported');\n```\n\n### Setting the Log level globally\nWill be used if no local level is set\n```\nlog.level(log.WARN, true);               // set global log level\nlog.info('this will be reported');       // because local level defaults to INFORM\nlog.level(null);                         // unset the local level\nlog.info('this will not be reported');   // because no local level is defined and global level is set to WARN\n```\n\n### log.inspect utility\nreturns a string representing a deep inspection of `myObj`.\n```\nlog.info(log.inspect(myObj));                    // prints the structure to first depth\nlog.info(log.inspect(myObj), {});                // prints the structure to inifinite depth\nlog.info(log.inspect(myObj), {colors:null});     // prints the structure without colors\nlog.info(myObj);                                 // equivalent to `log.info(log.inspect(myObj));`\n```\n\n## Reporting Levels:\n- &nbsp; {@link log.Log.DEBUG Log.DEBUG}\n- &nbsp; {@link log.Log.INFO  Log.INFO}\n- &nbsp; {@link log.Log.WARN  Log.WARN}\n- &nbsp; {@link log.Log.ERROR Log.ERROR}\n\n## Reporting methods\n- &nbsp; {@link log.Log.debug log.debug()}\n- &nbsp; {@link log.Log.info  log.info()}\n- &nbsp; {@link log.Log.warn  log.warn()}\n- &nbsp; {@link log.Log.error log.error()}\n\n## Configurations:\n- &nbsp; {@link log.Log.level   log.level()}\n- &nbsp; {@link log.Log.format  log.format()}\n- &nbsp; {@link log.Log.prefix  log.prefix()}\n\n## Inspection support:\n- &nbsp; {@link log.Log.inspect log.inspect()}\n"
			},
			"children": [
				{
					"id": 51,
					"name": "Log",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "main logging class. See {@link log log overview} for usage."
					},
					"children": [
						{
							"id": 70,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "new Log",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 72,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 51,
										"name": "Log"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 174,
									"character": 35
								}
							]
						},
						{
							"id": 69,
							"name": "colors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 174,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 68,
							"name": "maxLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 173,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "-1"
						},
						{
							"id": 66,
							"name": "reportLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 171,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"id": 44,
								"name": "LevelDesc"
							},
							"defaultValue": "<LevelDesc>undefined"
						},
						{
							"id": 67,
							"name": "reportPrefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 172,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 55,
							"name": "DEBUG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Debug reporting level with importance 0"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 146,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"DEBUG\""
						},
						{
							"id": 58,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Warning reporting level with importance 3"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 155,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ERROR\""
						},
						{
							"id": 52,
							"name": "INDENT_COLORS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 140,
									"character": 34
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "['darkblue', 'darkgreen', 'darkred', 'darkcyan', 'darkyellow', 'darkmagenta']"
						},
						{
							"id": 56,
							"name": "INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 1"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 149,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"INFO\""
						},
						{
							"id": 57,
							"name": "WARN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 2"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 152,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"WARN\""
						},
						{
							"id": 54,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 143,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "Log.defDateFormat"
						},
						{
							"id": 53,
							"name": "defDateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current date format string. See [date module]('_date_.html')"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 142,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"%YYYY%MM%DD %hh:%mm:%ss.%jjj\""
						},
						{
							"id": 65,
							"name": "globalLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current reporting level, same across all modules"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 169,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"id": 44,
								"name": "LevelDesc"
							},
							"defaultValue": "Log.levels[Log.INFO]"
						},
						{
							"id": 64,
							"name": "log",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the global `log` object."
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 166,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 51,
								"name": "Log"
							},
							"defaultValue": "new Log('')"
						},
						{
							"id": 73,
							"name": "messageLength",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "sets the maximum length of a message.\nIf messages exceed this length, the middle of the message will be replaced by ellipses (...) such that the\noverall message does not exceed this length\nNegative values avoid shortening.\ngets the current maximum length of a message"
							},
							"getSignature": [
								{
									"id": 76,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "gets the current maximum length of a message"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 74,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the maximum length of a message.\nIf messages exceed this length, the middle of the message will be replaced by ellipses (...) such that the\noverall message does not exceed this length\nNegative values avoid shortening."
									},
									"parameters": [
										{
											"id": 75,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 184,
									"character": 28
								},
								{
									"fileName": "log.ts",
									"line": 187,
									"character": 28
								}
							]
						},
						{
							"id": 115,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "configures the log facility.\n- cfg.colors: boolean, determines if output is colored\n- cfg.logfile: sets the naming template for the logfile. Set logFile=null to disable.\n- cfg.format: sets the format for the timestamp for each log entry\n- cfg.level: sets the reporting level (same as calling log.level())"
									},
									"parameters": [
										{
											"id": 117,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 118,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 119,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 366,
																	"character": 29
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 120,
															"name": "format",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 366,
																	"character": 46
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 121,
															"name": "level",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 366,
																	"character": 61
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																119,
																120,
																121
															]
														}
													],
													"sources": [
														{
															"fileName": "log.ts",
															"line": 366,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 366,
									"character": 17
								}
							]
						},
						{
							"id": 81,
							"name": "debug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 82,
									"name": "debug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an debug message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is DEBUG or lower.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 83,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. For msg types, refer to {@link Log.info `info()`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 231,
									"character": 16
								}
							]
						},
						{
							"id": 96,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 97,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will always be reported to the log.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 98,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. For msg types, For msg types, refer to {@link Log.info `info()`}.\nIn addition:\n- `Error` - if msg is an Error (e.g. from a catch statement), prints the error message as well as a stack trace."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 281,
									"character": 16
								}
							]
						},
						{
							"id": 109,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the format string to use for logging. If no parameter is specified,\nthe function returns the currently set format string. The preset is '%YYYY%MM%DD %hh:%mm:%ss.%jjj'\nFor supported formats see {@link date date}.\nUsage\n- `format(null)` sets the format to `defDateFormat`\n- `format()` returns the current format without changing it.",
										"returns": "the currently set format string\n"
									},
									"parameters": [
										{
											"id": 111,
											"name": "fmtStr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "optional format string to use;"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 342,
									"character": 17
								}
							]
						},
						{
							"id": 130,
							"name": "getPrePostfix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 131,
									"name": "getPrePostfix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 132,
											"name": "indent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 133,
											"name": "level",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 134,
											"name": "currIndent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 135,
											"name": "colors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 412,
									"character": 27
								}
							]
						},
						{
							"id": 90,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 91,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 92,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. The following types are supported:\n- `string` - `'...'`: prints the string\n- `function` - `() => '...'`: if the message level is above the threshold level, calls the function\n   to produce the string to be printed\n- `object literal` - `{...}`:  prints a deep inspection of the object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 262,
									"character": 15
								}
							]
						},
						{
							"id": 122,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 123,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Usage:\n- `log.info(log.inspect(struct))`     -> `depth=0`, `indent='   '`, with html-coded colors\n- `log.info(log.inspect(struct, {}))` -> `depth=-1` (inf), `indent='   '`, with html-coded colors\n- `log.info(log.inspect(struct, {colors:null}))` -> no colors\n<p>\nThe call returns a raw formatted text string, or a HTML formatted string if `colors` is defined.",
										"returns": "a string representation of an object literal, similar to the Node `util.inspect` call\n"
									},
									"parameters": [
										{
											"id": 124,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 125,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__1",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 126,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 129,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "an array of `css` color values: if defined, the output will be `HTML` formatted, with indentation\nlevels indicated by colors in ascending sequence from the array, restarting at index 0 if the array is shorter than the maximum indentation level.\n`colors` defaults to the static `COLORS` array. To disable, provide a value of `null`."
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 387,
																	"character": 59
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "Log.INDENT_COLORS"
														},
														{
															"id": 127,
															"name": "depth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "depth of recursion, defaults to 3. Use `null` or negative values for infinite depth"
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 387,
																	"character": 34
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "-1"
														},
														{
															"id": 128,
															"name": "indent",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"comment": {
																"text": "the indent string to use, will accumulate for each level of indentation, defaults to four spaces."
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 387,
																	"character": 45
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"   \""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																129,
																127,
																128
															]
														}
													],
													"sources": [
														{
															"fileName": "log.ts",
															"line": 387,
															"character": 27
														}
													]
												}
											},
											"defaultValue": "{depth:0, indent:'   ', colors:Log.INDENT_COLORS}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 387,
									"character": 18
								}
							]
						},
						{
							"id": 77,
							"name": "level",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 78,
									"name": "level",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "sets the reporting level according to `newLevel`.\nValid values are {@link log.DEBUG log.DEBUG}, {@link log.INFO log.INFO},\n{@link log.WARN log.WARN}, {@link log.ERROR log.ERROR}, or `null`.\nSubsequent reporting calls will be filtered such that only calls with an importance\nat least the same as `newLevel` will be written to the log.<br>",
										"text": "By default, `newLevel` sets the reporting level for the module only, and takes precedence over\nany global level setting. Providing `null` as level value passes precedence back to the global setting.\nThis allows for simple per-module settings, for example in debugging scenarios.",
										"returns": "the new reporting level (DEBUG, INFO, WARN, ERROR)\n"
									},
									"parameters": [
										{
											"id": 79,
											"name": "newLevelSym",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "the new reporting level to set.\nIf omitted, the method returns the currently set reporting level.\nIf set to `null`, the module's local reporting level defaults to the global reporting level; `setGlobalLevel` is ignored."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 80,
											"name": "setGlobalLevel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "defaults to `false`. If `true`, sets the global reporting level for all modules."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 206,
									"character": 16
								}
							]
						},
						{
							"id": 99,
							"name": "out",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 100,
									"name": "out",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will be reported to the log if `lvl` meets or exceeds the current reporting level.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 101,
											"name": "lvl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the reporting level of `msg`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 102,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. If `msg` is an object literal, a deep inspection will be printed.\nElse if `msg` is a function, it will be called to return the string to print or object to inspect. This\navoids constructing a potentially expensive message string if the level is below the current reporting level.\nFinally, if `msg` is a string, it will be printed with appropriate decoration, e.g. a date string and\nprefix."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 103,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 48,
												"name": "Msg"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 303,
									"character": 17
								}
							]
						},
						{
							"id": 104,
							"name": "output",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "output",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 106,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 107,
											"name": "header",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 108,
											"name": "line",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 328,
									"character": 20
								}
							]
						},
						{
							"id": 112,
							"name": "prefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "prefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "defines a prefix to be printed for each call to a log function.",
										"returns": "the new prefix\n"
									},
									"parameters": [
										{
											"id": 114,
											"name": "prf",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "the prefix to prepend. Defaults to '';"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 353,
									"character": 17
								}
							]
						},
						{
							"id": 87,
							"name": "progress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 88,
									"name": "progress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 89,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. For msg types, refer to {@link Log.info `info()`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 249,
									"character": 19
								}
							]
						},
						{
							"id": 84,
							"name": "transient",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "transient",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an debug message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is DEBUG or lower.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 86,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. For msg types, refer to {@link Log.info `info()`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 240,
									"character": 20
								}
							]
						},
						{
							"id": 93,
							"name": "warn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 94,
									"name": "warn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "reports an warning message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is WARN or lower.",
										"returns": "the message printed\n"
									},
									"parameters": [
										{
											"id": 95,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the message to report. For msg types, refer to {@link Log.info `info()`}."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 271,
									"character": 15
								}
							]
						},
						{
							"id": 59,
							"name": "levels",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isProtected": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "map of valid reporting levels"
							},
							"children": [
								{
									"id": 60,
									"name": "__computed",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 63,
											"name": "desc",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"ERROR\""
										},
										{
											"id": 61,
											"name": "importance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 62,
											"name": "sym",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 159,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 160,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 161,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 162,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "Log.ERROR"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												63,
												61,
												62
											]
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 159,
											"character": 19
										},
										{
											"fileName": "log.ts",
											"line": 160,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 161,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 162,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										60
									]
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 158,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								70
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								69,
								68,
								66,
								67,
								55,
								58,
								52,
								56,
								57,
								54,
								53,
								65,
								64
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								73
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								115,
								81,
								96,
								109,
								130,
								90,
								122,
								77,
								99,
								104,
								112,
								87,
								84,
								93
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 139,
							"character": 16
						}
					]
				},
				{
					"id": 44,
					"name": "LevelDesc",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type definition for level descriptors"
					},
					"children": [
						{
							"id": 47,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 64
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 45,
							"name": "importance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 46,
							"name": "sym",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 129,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								47,
								45,
								46
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 129,
							"character": 26
						}
					]
				},
				{
					"id": 48,
					"name": "Msg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 49,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 132,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 50,
							"name": "lf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 133,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								49,
								50
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 131,
							"character": 13
						}
					]
				},
				{
					"id": 136,
					"name": "COLOR",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 159,
							"name": "bgBlack",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 116,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#000;\""
						},
						{
							"id": 163,
							"name": "bgBlue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#00f;\""
						},
						{
							"id": 165,
							"name": "bgCyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 122,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#0ff;\""
						},
						{
							"id": 161,
							"name": "bgGreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 118,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#0f0;\""
						},
						{
							"id": 164,
							"name": "bgMagenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 121,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#f0f;\""
						},
						{
							"id": 160,
							"name": "bgRed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 117,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#f00;\""
						},
						{
							"id": 166,
							"name": "bgWhite",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 123,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#fff;\""
						},
						{
							"id": 162,
							"name": "bgYellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 119,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"background-color:#ff0;\""
						},
						{
							"id": 144,
							"name": "black",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#000;\""
						},
						{
							"id": 141,
							"name": "blink",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 95,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 148,
							"name": "blue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 103,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#00f;\""
						},
						{
							"id": 138,
							"name": "bold",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 92,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"font-weight:bold;\""
						},
						{
							"id": 137,
							"name": "clear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 90,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#000; background-color:inherit; font-weight:normal;\""
						},
						{
							"id": 150,
							"name": "cyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 105,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#0ff;\""
						},
						{
							"id": 155,
							"name": "darkblue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 111,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#008;\""
						},
						{
							"id": 157,
							"name": "darkcyan",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 113,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#088;\""
						},
						{
							"id": 153,
							"name": "darkgreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 109,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#080;\""
						},
						{
							"id": 156,
							"name": "darkmagenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 112,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#808;\""
						},
						{
							"id": 152,
							"name": "darkred",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 108,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#800;\""
						},
						{
							"id": 154,
							"name": "darkyellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 110,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#880;\""
						},
						{
							"id": 139,
							"name": "dim",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 93,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 158,
							"name": "gray",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 114,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#888;\""
						},
						{
							"id": 146,
							"name": "green",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 101,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#0f0;\""
						},
						{
							"id": 143,
							"name": "hidden",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 97,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 149,
							"name": "magenta",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 104,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#f0f;\""
						},
						{
							"id": 145,
							"name": "red",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 100,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#f00;\""
						},
						{
							"id": 142,
							"name": "reverse",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 96,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 140,
							"name": "underscore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 94,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 151,
							"name": "white",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#fff;\""
						},
						{
							"id": 147,
							"name": "yellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 102,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"color:#ff0;\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								159,
								163,
								165,
								161,
								164,
								160,
								166,
								162,
								144,
								141,
								148,
								138,
								137,
								150,
								155,
								157,
								153,
								156,
								152,
								154,
								139,
								158,
								146,
								143,
								149,
								145,
								142,
								140,
								151,
								147
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 89,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						51
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						44,
						48
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						136
					]
				}
			],
			"sources": [
				{
					"fileName": "log.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 447,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/overview.ts",
			"comment": {
				"shortText": "# hsUtil",
				"text": "Helpful Scripts utility functions for use in both browser and `node` environments\n<a href=\"./data/src/hsUtil/coverage/\" target=\"_blank\">[Coverage Info]</a>\n\n[![npm version](https://badge.fury.io/js/hsutil.svg)](https://badge.fury.io/js/hsutil)\n[![GitHub](https://img.shields.io/badge/GitHub-hsUtil-blue.svg)](https://github.com/helpfulscripts/hsutil)\n[![docs](https://img.shields.io/badge/hsDocs-hsUtil-blue.svg)](https://helpfulscripts.github.io/hsUtil/#!/api/hsUtil/0)\n[![Build Status](https://travis-ci.org/HelpfulScripts/hsUtil.svg?branch=master)](https://travis-ci.org/HelpfulScripts/hsUtil)\n[![Dependencies Status](https://david-dm.org/helpfulscripts/hsutil.svg)](https://david-dm.org/helpfulscripts/hsutil)\n[![codecov](https://codecov.io/gh/HelpfulScripts/hsUtil/branch/master/graph/badge.svg)](https://codecov.io/gh/HelpfulScripts/hsUtil)\n[![Known Vulnerabilities](https://snyk.io/test/github/HelpfulScripts/hsUtil/badge.svg?targetFile=package.json)](https://snyk.io/test/github/HelpfulScripts/hsUtil?targetFile=package.json)\n[![NPM License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://www.npmjs.com/package/hsutil)\n\n___\n\n## Index - no external dependencies:\n- &nbsp; {@link log log} module-level logging\n- &nbsp; {@link Pacing Pacing} functions that provide delays and timeouts for promises.\n- &nbsp; {@link Date Date} printf-style date formatting function\n- &nbsp; {@link Checksum Checksum} a quick checksum implementation for small strings\n- &nbsp; {@link Request Request} a wrapper for HTTP and HTTPS requests with optional authentication, pacing, and decoding\n\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				414,
				263,
				226,
				427,
				7,
				167,
				283,
				431,
				43,
				447
			]
		}
	]
}