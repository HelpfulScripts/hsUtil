{
	"id": 0,
	"name": "hsUtil",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"Checksum\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Checksum.ts",
			"comment": {
				"shortText": "Creates a checksum on a string.\nAdapted from https://stackoverflow.com/questions/811195/fast-open-source-checksum-for-small-strings"
			},
			"children": [
				{
					"id": 2,
					"name": "shortCheckSum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "shortCheckSum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "fast implementation for short strings (20-500 chars)"
							},
							"parameters": [
								{
									"id": 4,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Checksum.ts",
							"line": 9,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "Checksum.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "\"Date\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Date.ts",
			"comment": {
				"shortText": "# Date formatting support.\nFormats are specified in a printf-style format string.\n## Supported Formats\n- `%YY, %YYYY`           : two- or four-digit year, as '73', '1973'\n- `%M, %MM, %MMM, %MMMM` : month of year as '2', '02', 'Feb', 'February'\n- `%D, %DD`              : day of month as '5', '05' (1...31)\n- `%DDD, %DDDD`          : day of week as 'Tue', 'Tuesday'\n- `%h, %hh`              : hour of day as '7', '07 (0...23)\n- `%m, %mm`              : minutes as '6', '06' (0..59)\n- `%ss`                  : seconds as '09' (0...59)\n- `%j, %jj, %jjj`        : milliseconds as '1', '15', '159'"
			},
			"children": [
				{
					"id": 7,
					"name": "dayStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long weekday names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": " [\n    ['Sun', 'Sunday'],['Mon', 'Monday'],['Tue', 'Tuesday'],['Wed', 'Wednesday'],['Thu', 'Thursday'],['Fri', 'Friday'],['Sat', 'Saturday']]"
				},
				{
					"id": 6,
					"name": "monthStr",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "short and long month names"
					},
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": " [\n    ['Jan', 'January'], ['Feb', 'February'], ['Mar', 'March'], ['Apr', 'April'], ['May', 'May'], ['Jun', 'June'],\n    ['Jul', 'July'], ['Aug', 'August'], ['Sep', 'September'], ['Oct', 'October'], ['Nov', 'November'], ['Dec', 'December']]"
				},
				{
					"id": 12,
					"name": "date",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 13,
							"name": "date",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "## Example:\n<pre>\ndate('%MM/%DD/%YY');           // -> 08/17/16 (using current date)\nlet d = new Date('7/4/2010');\ndate('%DDDD, %MM/%DD/%YY', d); // -> Sunday, 07/04/10\n</pre>",
								"returns": "a copy of `formatString` where all supported patterns are replaced by the respective values from `date`.\n"
							},
							"parameters": [
								{
									"id": 14,
									"name": "formatString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the format string to use."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15,
									"name": "date",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"defaultValue": "new Date()"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 43,
							"character": 20
						}
					]
				},
				{
					"id": 8,
					"name": "formatNumber",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 9,
							"name": "formatNumber",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "add leading zeros to an integer until `digits` are reached"
							},
							"parameters": [
								{
									"id": 10,
									"name": "number",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 11,
									"name": "digits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 25,
							"character": 21
						}
					]
				},
				{
					"id": 16,
					"name": "ms",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "converts minutes, hours, days, weeks ... into milliseconds and back"
					},
					"children": [
						{
							"id": 23,
							"name": "fromDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "fromDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 25,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 71,
									"character": 12
								}
							]
						},
						{
							"id": 20,
							"name": "fromHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 21,
									"name": "fromHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 22,
											"name": "h",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 70,
									"character": 13
								}
							]
						},
						{
							"id": 17,
							"name": "fromMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 18,
									"name": "fromMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 19,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 69,
									"character": 15
								}
							]
						},
						{
							"id": 26,
							"name": "fromWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 27,
									"name": "fromWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 28,
											"name": "w",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 72,
									"character": 13
								}
							]
						},
						{
							"id": 35,
							"name": "toDays",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "toDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 37,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 75,
									"character": 10
								}
							]
						},
						{
							"id": 32,
							"name": "toHours",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "toHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 34,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 74,
									"character": 11
								}
							]
						},
						{
							"id": 29,
							"name": "toMinutes",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 30,
									"name": "toMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 31,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 73,
									"character": 13
								}
							]
						},
						{
							"id": 38,
							"name": "toWeeks",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "toWeeks",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 40,
											"name": "ms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "Date.ts",
									"line": 76,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								23,
								20,
								17,
								26,
								35,
								32,
								29,
								38
							]
						}
					],
					"sources": [
						{
							"fileName": "Date.ts",
							"line": 68,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						7,
						6
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						12,
						8
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "Date.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 76,
			"name": "\"Number\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/Number.ts",
			"comment": {
				"shortText": "# Number Formatting Support."
			},
			"children": [
				{
					"id": 77,
					"name": "round",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 78,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "rounds a number `n` to the specified `d` decimals and returns a string"
							},
							"parameters": [
								{
									"id": 79,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number to round"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 80,
									"name": "d",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number of decimal digits to round to; defaults to 0\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "Number.ts",
							"line": 12,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						77
					]
				}
			],
			"sources": [
				{
					"fileName": "Number.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 41,
			"name": "\"TimedPromises\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/TimedPromises.ts",
			"comment": {
				"shortText": "## Helpful Script Timing Support\nProvides convenience functions that don't depend on specific frameworks or libraries"
			},
			"children": [
				{
					"id": 42,
					"name": "Pace",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "description",
								"text": "ensures that function calls in a sequence are not executed faster than a preset minimum delay.\n\n**Usage:**\n```\nconst q = new PacingQueue(100); // 100ms between calls\n...\nq.add((ms) => `I have been called after ${ms}ms`;})\n   .then((result) => console.log(result));     // prints: I have been called after ***ms`\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 48,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"signatures": [
								{
									"id": 49,
									"name": "new Pace",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 50,
											"name": "pace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "100"
										},
										{
											"id": 51,
											"name": "maxConcurrent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the maximum number of concurrent execution calls; defaults to -1 (no limit)\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "-1"
										}
									],
									"type": {
										"type": "reference",
										"name": "Pace",
										"id": 42
									}
								}
							],
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 61,
									"character": 32
								}
							]
						},
						{
							"id": 47,
							"name": "beingCalled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 61,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 43,
							"name": "maxConcurrent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 57,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": " -1"
						},
						{
							"id": 44,
							"name": "pace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 46,
							"name": "waitCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 60,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 45,
							"name": "waitUntil",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 59,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 56,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 57,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "adds the function to the queue. After an appropriate time has passed,\nthe function will be called with the delay in ms as parameter.",
										"returns": "a promise that resolved to the result of the function\n"
									},
									"parameters": [
										{
											"id": 58,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 60,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 61,
																	"name": "msSinceAdding",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "TimedPromises.ts",
															"line": 82,
															"character": 17
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 82,
									"character": 13
								}
							]
						},
						{
							"id": 54,
							"name": "getCallingCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "getCallingCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 74,
									"character": 19
								}
							]
						},
						{
							"id": 52,
							"name": "getWaitCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 53,
									"name": "getWaitCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimedPromises.ts",
									"line": 73,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								48
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								47,
								43,
								44,
								46,
								45
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								56,
								54,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "TimedPromises.ts",
							"line": 56,
							"character": 17
						}
					]
				},
				{
					"id": 65,
					"name": "delay",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 66,
							"name": "delay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "a `Promise` that resolves after `ms`\n",
								"tags": [
									{
										"tag": "description",
										"text": "delays a promise, passing the parameter\nreceived from the calling promise down to the resolving promise.\n\n**Usage 1:** a delay within the `then` chain:\n```\n<PromiseLike>\n   .then(...)\n   .then(delay(10))\n   .then(...)\n   .catch(...)\n```\n**Usage 2:** an initial delay\n```\ndelay(10)()\n   .then(...)\n   .catch(...)\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 67,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "TimedPromises.ts",
							"line": 37,
							"character": 21
						}
					]
				},
				{
					"id": 68,
					"name": "promiseChain",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 69,
							"name": "promiseChain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sequentially calls the provided `tasks` in a `.then()` chain of promises,\nguaranteeing the order of execution per index order in the array.\nEach task can return a result, or a promise for a result.",
								"returns": "an array of results for each task\n"
							},
							"typeParameter": [
								{
									"id": 70,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "tasks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an array of task calls to execute in sequence. Each call will pass the array of results for tasks so far executed."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 72,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"signatures": [
													{
														"id": 73,
														"name": "__call",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {},
														"parameters": [
															{
																"id": 74,
																"name": "results",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "typeParameter",
																	"name": "T"
																},
																{
																	"type": "reference",
																	"name": "Promise",
																	"typeArguments": [
																		{
																			"type": "typeParameter",
																			"name": "T"
																		}
																	]
																}
															]
														}
													}
												],
												"sources": [
													{
														"fileName": "TimedPromises.ts",
														"line": 116,
														"character": 38
													}
												]
											}
										}
									}
								},
								{
									"id": 75,
									"name": "initialResult",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "optional initial array to collect the task results."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "TimedPromises.ts",
							"line": 116,
							"character": 28
						}
					]
				},
				{
					"id": 62,
					"name": "timeout",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 63,
							"name": "timeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "a Promise that rejects after `ms`\n",
								"tags": [
									{
										"tag": "description",
										"text": "timeout promise for use in `Promise.race()`."
									}
								]
							},
							"parameters": [
								{
									"id": 64,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the milliseconds to wait before rejecting"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "TimedPromises.ts",
							"line": 12,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						42
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						65,
						68,
						62
					]
				}
			],
			"sources": [
				{
					"fileName": "TimedPromises.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 223,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 81,
			"name": "\"log\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/log.ts",
			"comment": {
				"shortText": "Logging convenience functions.\n## Usage",
				"text": "### Using the global log object\nSettings in `log` are shared across modules\n```\nimport { log } from 'hsutil';\nlog.info('by the way:'); // -> 20160817 09:59:08.032 info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 error *** oh dear!\n```\n\n### Using a local log object\nSettings in `log` remain local to the module\n```\nimport { log as gLog } from 'hsutil'; const log = gLog('myModule')\nlog.info('by the way:'); // -> 20160817 09:59:08.032 myModule info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 myModule error *** oh dear!\n```\n\n### Using the `format` template:\n```\nlog.format('%MMM %DD %hh%mm%ss');\nlog.info('by the way:');  // -> Aug 17 095908 info by the way:\nlog.error('oh dear!');    // -> Aug 17 095908 error *** oh dear!\n```\n\n### Change the module prefix:\n```\nlog.prefix('Main');\nlog.format('%hh%mm%ss');\nlog.info('by the way:');  // -> 09:59:08.032 Main info by the way:\nlog.error('oh dear!');    // -> 09:59:08.045 Main error *** oh dear!\n```\n\n### Setting the Log level locally for the module\n```\nlog.level(log.WARN);\nlog.info('this will not be reported');\n```\n\n### Setting the Log level globally\nWill be used if no local level is set\n```\nlog.level(log.WARN, true);               // set global log level\nlog.info('this will be reported');       // because local level defaults to INFORM\nlog.level(null);                         // unset the local level\nlog.info('this will not be reported');   // because no local level is defined and global level is set to WARN\n```\n\n### log.inspect utility\nreturns a string representing a deep inspection of `myObj`.\n```\nlog.info(log.inspect(myObj, null));      // prints the structure to inifinite depth\n```\n\n## Reporting Levels:\n- &nbsp; {@link log.DEBUG log.DEBUG}\n- &nbsp; {@link log.INFO  log.INFO}\n- &nbsp; {@link log.WARN  log.WARN}\n- &nbsp; {@link log.ERROR log.ERROR}\n\n## Reporting methods\n- &nbsp; {@link log.LogType.debug log.debug()}\n- &nbsp; {@link log.LogType.info  log.info()}\n- &nbsp; {@link log.LogType.warn  log.warn()}\n- &nbsp; {@link log.LogType.error log.error()}\n\n## Configurations:\n- &nbsp; {@link log.LogType.level   log.level()}\n- &nbsp; {@link log.LogType.format  log.format()}\n- &nbsp; {@link log.LogType.prefix  log.prefix()}\n- &nbsp; {@link log.LogType.logFile log.logFile()}\n\n## Inspection support:\n- &nbsp; {@link log.LogType.inspect log.inspect()}\n"
			},
			"children": [
				{
					"id": 145,
					"name": "Log",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 160,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 161,
									"name": "new Log",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 162,
											"name": "_prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Log",
										"id": 145
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 139,
									"character": 25
								}
							]
						},
						{
							"id": 158,
							"name": "reportLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 138,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "LevelDesc",
								"id": 141
							},
							"defaultValue": " <LevelDesc>undefined"
						},
						{
							"id": 159,
							"name": "reportPrefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 139,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 148,
							"name": "DEBUG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Debug reporting level with importance 0"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 116,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"DEBUG\""
						},
						{
							"id": 151,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Warning reporting level with importance 3"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 125,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"ERROR\""
						},
						{
							"id": 149,
							"name": "INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 1"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 119,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"INFO\""
						},
						{
							"id": 150,
							"name": "WARN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Info reporting level with importance 2"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 122,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"WARN\""
						},
						{
							"id": 147,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 113,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " Log.defDateFormat"
						},
						{
							"id": 146,
							"name": "defDateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current date format string. See [date module]('_date_.html')"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 112,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"%YYYY%MM%DD %hh:%mm:%ss.%jjj\""
						},
						{
							"id": 157,
							"name": "globalLevel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "current reporting level, same across all modules"
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 136,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "LevelDesc",
								"id": 141
							},
							"defaultValue": " Log.levels[Log.INFO]"
						},
						{
							"id": 219,
							"name": "addPoperties",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 220,
									"name": "addPoperties",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 221,
											"name": "logFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LogFn",
												"id": 82
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LogFn",
										"id": 82
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 339,
									"character": 26
								}
							]
						},
						{
							"id": 199,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 200,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "configures the log facility.\n- cfg.colors: boolean, determines if output is colored\n- cfg.logfile: sets the naming template for the logfile. Set logFile=null to disable.\n- cfg.format: sets the format for the timestamp for each log entry\n- cfg.level: sets the reporting level (same as calling log.level())"
									},
									"parameters": [
										{
											"id": 201,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 202,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 203,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 291,
																	"character": 22
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 204,
															"name": "format",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 291,
																	"character": 39
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 205,
															"name": "level",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 291,
																	"character": 54
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																203,
																204,
																205
															]
														}
													],
													"sources": [
														{
															"fileName": "log.ts",
															"line": 291,
															"character": 15
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 291,
									"character": 10
								}
							]
						},
						{
							"id": 167,
							"name": "debug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 168,
									"name": "debug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an debug message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is DEBUG or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 169,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 170,
											"name": "log2File",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 186,
									"character": 15
								}
							]
						},
						{
							"id": 179,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 180,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will always be reported to the log.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 181,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 182,
											"name": "log2File",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 215,
									"character": 15
								}
							]
						},
						{
							"id": 193,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 194,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets the format string to use for logging. If no parameter is specified,\nthe function returns the currently set format string. The preset is '%YYYY%MM%DD %hh:%mm:%ss.%jjj'\nFor supported formats see {@link date date}.\nUsage\n- `format(null)` sets the format to `defDateFormat`\n- `format()` returns the current format without changing it.",
										"returns": "the currently set format string\n"
									},
									"parameters": [
										{
											"id": 195,
											"name": "fmtStr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional format string to use;"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 267,
									"character": 10
								}
							]
						},
						{
							"id": 211,
							"name": "getPrePostfix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 212,
									"name": "getPrePostfix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 213,
											"name": "indent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214,
											"name": "level",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 215,
											"name": "currIndent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 328,
									"character": 27
								}
							]
						},
						{
							"id": 171,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 172,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 173,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 174,
											"name": "log2File",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 196,
									"character": 14
								}
							]
						},
						{
							"id": 206,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 207,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns a string representation of an object literal, similar to the Node `util.inspect` call.",
										"text": "Usage: `log.info(log.inspect(struct, 1))`\n\nThe call returns a raw formatted text string, or a HTM formatted string if `colors` is defined."
									},
									"parameters": [
										{
											"id": 208,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 209,
											"name": "depth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "depth of recursion, defaults to 1. Use `null` for infinite depth"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 210,
											"name": "indent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the indent string to use, will accumulate for each level of indentation, defaults to ''\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"   \""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 306,
									"character": 11
								}
							]
						},
						{
							"id": 163,
							"name": "level",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "level",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets the reporting level according to `newLevel`.\nValid values are {@link log.DEBUG log.DEBUG}, {@link log.INFO log.INFO},\n{@link log.WARN log.WARN}, {@link log.ERROR log.ERROR}, or `null`.\nSubsequent reporting calls will be filtered such that only calls with an importance\nat least the same as `newLevel` will be written to the log.<br>",
										"text": "By default, `newLevel` sets the reporting level for the module only, and takes precedence over\nany global level setting. Providing `null` as level value passes precedence back to the global setting.\nThis allows for simple per-module settings, for example in debugging scenarios.",
										"returns": "the new reporting level (DEBUG, INFO, WARN, ERROR)\n"
									},
									"parameters": [
										{
											"id": 165,
											"name": "newLevelSym",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the new reporting level to set.\nIf omitted, the method returns the currently set reporting level.\nIf set to `null`, the module's local reporting level defaults to the global reporting level; `setGlobalLevel` is ignored."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 166,
											"name": "setGlobalLevel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "defaults to `false`. If `true`, sets the global reporting level for all modules."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 160,
									"character": 9
								}
							]
						},
						{
							"id": 187,
							"name": "makeMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 188,
									"name": "makeMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the core format of the reported message. This method is\ncalled within `out` to allow for format extensions of the message printed,\ne.g. by color codes."
									},
									"parameters": [
										{
											"id": 189,
											"name": "line",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190,
											"name": "lvl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 191,
											"name": "dateStr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 192,
											"name": "desc",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 253,
									"character": 25
								}
							]
						},
						{
							"id": 183,
							"name": "out",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 184,
									"name": "out",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will be reported to the log if `lvl` meets or exceeds the current reporting level.",
										"returns": "promise to return the message written\n"
									},
									"parameters": [
										{
											"id": 185,
											"name": "lvl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the reporting level of `msg`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 186,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 233,
									"character": 13
								}
							]
						},
						{
							"id": 196,
							"name": "prefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "prefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a prefix to be printed for each call to a log function.",
										"returns": "the new prefix\n"
									},
									"parameters": [
										{
											"id": 198,
											"name": "prf",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the prefix to prepend. Defaults to '';"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 278,
									"character": 10
								}
							]
						},
						{
							"id": 175,
							"name": "warn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 176,
									"name": "warn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an warning message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is WARN or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 177,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 178,
											"name": "log2File",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 206,
									"character": 14
								}
							]
						},
						{
							"id": 216,
							"name": "makeLogFn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 217,
									"name": "makeLogFn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "factory method to create instances of callable `Log`"
									},
									"parameters": [
										{
											"id": 218,
											"name": "prefix",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LogFn",
										"id": 82
									}
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 333,
									"character": 27
								}
							]
						},
						{
							"id": 152,
							"name": "levels",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "map of valid reporting levels"
							},
							"children": [
								{
									"id": 153,
									"name": "__computed",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 156,
											"name": "desc",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 129,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 130,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 131,
													"character": 60
												},
												{
													"fileName": "log.ts",
													"line": 132,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"ERROR\""
										},
										{
											"id": 154,
											"name": "importance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 129,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 130,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 131,
													"character": 35
												},
												{
													"fileName": "log.ts",
													"line": 132,
													"character": 35
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 155,
											"name": "sym",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "log.ts",
													"line": 129,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 130,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 131,
													"character": 43
												},
												{
													"fileName": "log.ts",
													"line": 132,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " Log.ERROR"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												156,
												154,
												155
											]
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 129,
											"character": 19
										},
										{
											"fileName": "log.ts",
											"line": 130,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 131,
											"character": 18
										},
										{
											"fileName": "log.ts",
											"line": 132,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										153
									]
								}
							],
							"sources": [
								{
									"fileName": "log.ts",
									"line": 128,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								160
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								158,
								159,
								148,
								151,
								149,
								150,
								147,
								146,
								157
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								219,
								199,
								167,
								179,
								193,
								211,
								171,
								206,
								163,
								187,
								183,
								196,
								175,
								216
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 110,
							"character": 16
						}
					]
				},
				{
					"id": 141,
					"name": "LevelDesc",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type definition for level descriptors"
					},
					"children": [
						{
							"id": 144,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 64
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "importance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 143,
							"name": "sym",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 107,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								144,
								142,
								143
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 107,
							"character": 26
						}
					]
				},
				{
					"id": 82,
					"name": "LogFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 84,
									"name": "_prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogFn",
								"id": 82
							}
						}
					],
					"children": [
						{
							"id": 85,
							"name": "DEBUG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 87,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 88,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 90,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 86,
							"name": "INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 88,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 87,
							"name": "WARN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 89,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 99,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 128,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 129,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 130,
													"name": "cfg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 131,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 132,
																	"name": "colors",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "log.ts",
																			"line": 99,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 133,
																	"name": "format",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "log.ts",
																			"line": 99,
																			"character": 41
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 134,
																	"name": "level",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "log.ts",
																			"line": 99,
																			"character": 56
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		132,
																		133,
																		134
																	]
																}
															],
															"sources": [
																{
																	"fileName": "log.ts",
																	"line": 99,
																	"character": 17
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 99,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 94,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 92,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 95,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 96,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 97,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 98,
													"name": "log2File",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 92,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 109,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 95,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 110,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 111,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 112,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 113,
													"name": "log2File",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 95,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 114,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 96,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 115,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 116,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 117,
													"name": "fmtStr",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 96,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 99,
							"name": "info",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 93,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 100,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 101,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 102,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 103,
													"name": "log2File",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 93,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 135,
							"name": "inspect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 100,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 136,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 137,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 138,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 139,
													"name": "depth",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 140,
													"name": "indent",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 100,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 89,
							"name": "level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 91,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 90,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 91,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 92,
													"name": "newLevelSym",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 93,
													"name": "setGlobalLevel",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 91,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 122,
							"name": "out",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 98,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 123,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 124,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 125,
													"name": "lvl",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 126,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 98,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 118,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 97,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 119,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 120,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 121,
													"name": "prf",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 97,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 104,
							"name": "warn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log.ts",
									"line": 94,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 105,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 106,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 107,
													"name": "msg",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 108,
													"name": "log2File",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "log.ts",
											"line": 94,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								85,
								88,
								86,
								87,
								127,
								94,
								109,
								114,
								99,
								135,
								89,
								122,
								118,
								104
							]
						}
					],
					"sources": [
						{
							"fileName": "log.ts",
							"line": 85,
							"character": 22
						}
					]
				},
				{
					"id": 222,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "log.ts",
							"line": 358,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "LogFn",
						"id": 82
					},
					"defaultValue": " Log.makeLogFn('')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						145
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						141,
						82
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "log.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 224,
			"name": "\"log2\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/log2.ts",
			"comment": {
				"shortText": "Logging convenience functions.\n## Usage",
				"text": "### Using the global log object\nSettings in `log` are shared across modules\n```\nimport { log } from 'hsutil';\nlog.info('by the way:'); // -> 20160817 09:59:08.032 info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 error *** oh dear!\n```\n\n### Using a local log object\nSettings in `log` remain local to the module\n```\nimport { log as gLog } from 'hsutil'; const log = gLog('myModule')\nlog.info('by the way:'); // -> 20160817 09:59:08.032 myModule info by the way:\nlog.error('oh dear!');   // -> 20160817 09:59:08.045 myModule error *** oh dear!\n```\n\n### Using the `format` template:\n```\nlog.format('%MMM %DD %hh%mm%ss');\nlog.info('by the way:');  // -> Aug 17 095908 info by the way:\nlog.error('oh dear!');    // -> Aug 17 095908 error *** oh dear!\n```\n\n### Change the module prefix:\n```\nlog.prefix('Main');\nlog.format('%hh%mm%ss');\nlog.info('by the way:');  // -> 09:59:08.032 Main info by the way:\nlog.error('oh dear!');    // -> 09:59:08.045 Main error *** oh dear!\n```\n\n### Setting the Log level locally for the module\n```\nlog.level(log.WARN);\nlog.info('this will not be reported');\n```\n\n### Setting the Log level globally\nWill be used if no local level is set\n```\nlog.level(log.WARN, true);               // set global log level\nlog.info('this will be reported');       // because local level defaults to INFORM\nlog.level(null);                         // unset the local level\nlog.info('this will not be reported');   // because no local level is defined and global level is set to WARN\n```\n\n### log.inspect utility\nreturns a string representing a deep inspection of `myObj`.\n```\nlog.info(log.inspect(myObj, null));      // prints the structure to inifinite depth\n```\n\n## Reporting Levels:\n- &nbsp; {@link log.DEBUG log.DEBUG}\n- &nbsp; {@link log.INFO  log.INFO}\n- &nbsp; {@link log.WARN  log.WARN}\n- &nbsp; {@link log.ERROR log.ERROR}\n\n## Reporting methods\n- &nbsp; {@link log.LogType.debug log.debug()}\n- &nbsp; {@link log.LogType.info  log.info()}\n- &nbsp; {@link log.LogType.warn  log.warn()}\n- &nbsp; {@link log.LogType.error log.error()}\n\n## Configurations:\n- &nbsp; {@link log.LogType.level   log.level()}\n- &nbsp; {@link log.LogType.format  log.format()}\n- &nbsp; {@link log.LogType.prefix  log.prefix()}\n- &nbsp; {@link log.LogType.logFile log.logFile()}\n\n## Inspection support:\n- &nbsp; {@link log.LogType.inspect log.inspect()}\n"
			},
			"children": [
				{
					"id": 225,
					"name": "LevelDesc",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type definition for level descriptors"
					},
					"children": [
						{
							"id": 228,
							"name": "desc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 101,
									"character": 64
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 226,
							"name": "importance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 101,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 227,
							"name": "sym",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 101,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								228,
								226,
								227
							]
						}
					],
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 101,
							"character": 26
						}
					]
				},
				{
					"id": 229,
					"name": "LogType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 230,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 231,
									"name": "_prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 232,
									"name": "logToFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ltfType",
										"id": 306
									}
								},
								{
									"id": 233,
									"name": "pathExists",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "peType",
										"id": 311
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogType",
								"id": 229
							}
						}
					],
					"children": [
						{
							"id": 234,
							"name": "DEBUG",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 134,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 237,
							"name": "ERROR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 137,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 235,
							"name": "INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 135,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 236,
							"name": "WARN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 272,
							"name": "config",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 273,
									"name": "config",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "configures the log facility.\n- cfg.colors: boolean, determines if output is colored\n- cfg.logfile: sets the naming template for the logfile. Set logFile=null to disable.\n- cfg.format: sets the format for the timestamp for each log entry\n- cfg.level: sets the reporting level (same as calling log.level())"
									},
									"parameters": [
										{
											"id": 274,
											"name": "cfg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 275,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 276,
															"name": "colors",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log2.ts",
																	"line": 247,
																	"character": 22
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 277,
															"name": "format",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log2.ts",
																	"line": 247,
																	"character": 39
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 278,
															"name": "level",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "log2.ts",
																	"line": 247,
																	"character": 54
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "symbol"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																276,
																277,
																278
															]
														}
													],
													"sources": [
														{
															"fileName": "log2.ts",
															"line": 247,
															"character": 15
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 247,
									"character": 10
								}
							]
						},
						{
							"id": 242,
							"name": "debug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 243,
									"name": "debug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an debug message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is DEBUG or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 244,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 245,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional flag to enable/suppress logging to file. Defaults to `true`"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 165,
									"character": 9
								}
							]
						},
						{
							"id": 254,
							"name": "error",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 255,
									"name": "error",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will always be reported to the log.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 256,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 257,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional flag to enable/suppress logging to file. Defaults to `true`"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 194,
									"character": 9
								}
							]
						},
						{
							"id": 266,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 267,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets the format string to use for logging. If no parameter is specified,\nthe function returns the currently set format string. The preset is '%YYYY%MM%DD %hh:%mm:%ss.%jjj'\nFor supported formats see {@link date date}.\nUsage\n- `format(null)` sets the format to `defDateFormat`\n- `format()` returns the current format without changing it.",
										"returns": "the currently set format string\n"
									},
									"parameters": [
										{
											"id": 268,
											"name": "fmtStr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional format string to use;"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 230,
									"character": 10
								}
							]
						},
						{
							"id": 246,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 247,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an informational message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is INFO or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 248,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 249,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional flag to enable/suppress logging to file. Defaults to `true`"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 175,
									"character": 8
								}
							]
						},
						{
							"id": 279,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns a string representation of an object literal, similar to the Node `util.inspect` call.",
										"text": "Usage: `log.info(log.inspect(struct, 1))`\n\nThe call returns a raw formatted text string, or a HTM formatted string if `colors` is defined."
									},
									"parameters": [
										{
											"id": 281,
											"name": "struct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the object literal to inspect"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 282,
											"name": "depth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "depth of recursion, defaults to 1. Use `null` for infinite depth"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 283,
											"name": "indent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the indent string to use, will accumulate for each level of indentation, defaults to ''"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 284,
											"name": "colors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "an array of css color values to apply to keywords in the inspected structure;\nif present, `inspect` will generate HTML content instead of raw text, substituting any `space` characters\n(' ') with `&nbsp;`. The color applied to each keyword cycles through the array with each increasing level,\nand restarts at index 0 when the level exceeds the length of the array.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 263,
									"character": 11
								}
							]
						},
						{
							"id": 238,
							"name": "level",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 239,
									"name": "level",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets the reporting level according to `newLevel`.\nValid values are {@link log.DEBUG log.DEBUG}, {@link log.INFO log.INFO},\n{@link log.WARN log.WARN}, {@link log.ERROR log.ERROR}, or `null`.\nSubsequent reporting calls will be filtered such that only calls with an importance\nat least the same as `newLevel` will be written to the log.<br>",
										"text": "By default, `newLevel` sets the reporting level for the module only, and takes precedence over\nany global level setting. Providing `null` as level value passes precedence back to the global setting.\nThis allows for simple per-module settings, for example in debugging scenarios.",
										"returns": "the new reporting level (DEBUG, INFO, WARN, ERROR)\n"
									},
									"parameters": [
										{
											"id": 240,
											"name": "newLevelSym",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the new reporting level to set.\nIf omitted, the method returns the currently set reporting level.\nIf set to `null`, the module's local reporting level defaults to the global reporting level; `setGlobalLevel` is ignored."
											},
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											}
										},
										{
											"id": 241,
											"name": "setGlobalLevel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "defaults to `false`. If `true`, sets the global reporting level for all modules."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 155,
									"character": 9
								}
							]
						},
						{
							"id": 263,
							"name": "logFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 264,
									"name": "logFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "sets a new logfile name template. Logfiles are created using this template\nat the time of each log entry call. If the file exists, the log entry will be appended.\nThis is a global setting that affects reporting in all modules.\nUsage:\n- `logFile()`: return the current logfile name\n- `logFile(null)`: disable log file\n- `logFile('')`: set default log file template `log-%YYYY-%MM-%DD.txt`\n- `logFile('log%D/%M/%Y.log')`: set new log file template",
										"returns": "promise to return the current logfile, or `undefined` if loggimng is disabled.\n"
									},
									"parameters": [
										{
											"id": 265,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "a template to use for log file names. Options for calling:"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 218,
									"character": 11
								}
							]
						},
						{
							"id": 258,
							"name": "out",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 259,
									"name": "out",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an error message to the log.\nThe message will be reported to the log if `lvl` meets or exceeds the current reporting level.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 260,
											"name": "lvl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the reporting level of `msg`"
											},
											"type": {
												"type": "intrinsic",
												"name": "symbol"
											}
										},
										{
											"id": 261,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 262,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional flag to enable/suppress logging to file. Defaults to `true`"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 204,
									"character": 7
								}
							]
						},
						{
							"id": 269,
							"name": "prefix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 270,
									"name": "prefix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "defines a prefix to be printed for each call to a log function.",
										"returns": "the new prefix\n"
									},
									"parameters": [
										{
											"id": 271,
											"name": "prf",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "the prefix to prepend. Defaults to '';"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 237,
									"character": 10
								}
							]
						},
						{
							"id": 250,
							"name": "warn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 251,
									"name": "warn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "reports an warning message to the log.\nThe message will actually be reported to the log only if the current\nreporting level is WARN or lower.",
										"returns": "promise to return the file written to, or undefined\n"
									},
									"parameters": [
										{
											"id": 252,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the message to report. If msg is an object literal, a deep inspection will be printed."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 253,
											"name": "log",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "optional flag to enable/suppress logging to file. Defaults to `true`"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 185,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								234,
								237,
								235,
								236
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								272,
								242,
								254,
								266,
								246,
								279,
								238,
								263,
								258,
								269,
								250
							]
						}
					],
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 132,
							"character": 24
						}
					]
				},
				{
					"id": 306,
					"name": "ltfType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 266,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 307,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 308,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 309,
											"name": "filename",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 310,
											"name": "msg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 266,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 311,
					"name": "peType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 267,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 312,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 313,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 314,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 267,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 285,
					"name": "DEBUG",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Debug reporting level with importance 0"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 83,
							"character": 11
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('DEBUG')"
				},
				{
					"id": 288,
					"name": "ERROR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Warning reporting level with importance 3"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 92,
							"character": 11
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('ERROR')"
				},
				{
					"id": 286,
					"name": "INFO",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Info reporting level with importance 1"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 86,
							"character": 10
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('INFO')"
				},
				{
					"id": 287,
					"name": "WARN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Info reporting level with importance 2"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 89,
							"character": 10
						}
					],
					"type": {
						"type": "unknown",
						"name": "unique symbol"
					},
					"defaultValue": " Symbol('WARN')"
				},
				{
					"id": 296,
					"name": "defDateFormat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "current date format string. See [date module]('_date_.html')"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 115,
							"character": 19
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "%YYYY%MM%DD %hh:%mm:%ss.%jjj"
					},
					"defaultValue": "\"%YYYY%MM%DD %hh:%mm:%ss.%jjj\""
				},
				{
					"id": 298,
					"name": "gColors",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "boolean determining if log will be printed in color"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 119,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 297,
					"name": "gDateFormat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 116,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": " defDateFormat"
				},
				{
					"id": 295,
					"name": "gGlobalLevel",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "current reporting level, same across all modules"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 112,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "LevelDesc",
						"id": 225
					},
					"defaultValue": " gLevels[INFO]"
				},
				{
					"id": 289,
					"name": "gLogFile",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"comment": {
						"shortText": "name of the current log file, or undefined"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 95,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 315,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "the global log object"
					},
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 270,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "LogType",
						"id": 229
					},
					"defaultValue": " create('', \n    (filename:string, msg:string):Promise<string> => Promise.resolve(undefined), \n    /** default implementation for browser usage: don't allow '/' in log file name */\n    (path:string):Promise<boolean> =>Promise.resolve(path.indexOf('/')>=0? false : true)\n)"
				},
				{
					"id": 316,
					"name": "create",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 317,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 318,
									"name": "_prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 319,
									"name": "logToFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ltfType",
										"id": 306
									}
								},
								{
									"id": 320,
									"name": "pathExists",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "peType",
										"id": 311
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogType",
								"id": 229
							}
						}
					],
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 276,
							"character": 15
						}
					]
				},
				{
					"id": 299,
					"name": "color",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "shell color escape codes"
					},
					"children": [
						{
							"id": 302,
							"name": "blue",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 125,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[36m\""
						},
						{
							"id": 304,
							"name": "bold",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 127,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[1m\""
						},
						{
							"id": 305,
							"name": "clear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 128,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[0m\""
						},
						{
							"id": 303,
							"name": "green",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 126,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[32m\""
						},
						{
							"id": 300,
							"name": "red",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 123,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[31m\""
						},
						{
							"id": 301,
							"name": "yellow",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 124,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\u001b[33m\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								302,
								304,
								305,
								303,
								300,
								301
							]
						}
					],
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 122,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 290,
					"name": "gLevels",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "map of valid reporting levels"
					},
					"children": [
						{
							"id": 291,
							"name": "__computed",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 294,
									"name": "desc",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log2.ts",
											"line": 105,
											"character": 48
										},
										{
											"fileName": "log2.ts",
											"line": 106,
											"character": 48
										},
										{
											"fileName": "log2.ts",
											"line": 107,
											"character": 48
										},
										{
											"fileName": "log2.ts",
											"line": 108,
											"character": 48
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"ERROR\""
								},
								{
									"id": 292,
									"name": "importance",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log2.ts",
											"line": 105,
											"character": 27
										},
										{
											"fileName": "log2.ts",
											"line": 106,
											"character": 27
										},
										{
											"fileName": "log2.ts",
											"line": 107,
											"character": 27
										},
										{
											"fileName": "log2.ts",
											"line": 108,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "3"
								},
								{
									"id": 293,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "log2.ts",
											"line": 105,
											"character": 35
										},
										{
											"fileName": "log2.ts",
											"line": 106,
											"character": 35
										},
										{
											"fileName": "log2.ts",
											"line": 107,
											"character": 35
										},
										{
											"fileName": "log2.ts",
											"line": 108,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "symbol"
									},
									"defaultValue": " ERROR"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										294,
										292,
										293
									]
								}
							],
							"sources": [
								{
									"fileName": "log2.ts",
									"line": 105,
									"character": 11
								},
								{
									"fileName": "log2.ts",
									"line": 106,
									"character": 10
								},
								{
									"fileName": "log2.ts",
									"line": 107,
									"character": 10
								},
								{
									"fileName": "log2.ts",
									"line": 108,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								291
							]
						}
					],
					"sources": [
						{
							"fileName": "log2.ts",
							"line": 104,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						225,
						229
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						306,
						311
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						285,
						288,
						286,
						287,
						296,
						298,
						297,
						295,
						289,
						315
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						316
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						299,
						290
					]
				}
			],
			"sources": [
				{
					"fileName": "log2.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 321,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/standalone/hsUtil/src/overview.ts",
			"comment": {
				"shortText": "# hsUtil",
				"text": "Helpful Scripts utility functions for use in both browser and `node` environments\n<a href=\"./data/src/hsUtil/coverage/\" target=\"_blank\">[Coverage Info]</a>\n\n[![npm version](https://badge.fury.io/js/hsutil.svg)](https://badge.fury.io/js/hsutil)\n[![GitHub](https://img.shields.io/badge/GitHub-hsUtil-blue.svg)](https://github.com/helpfulscripts/hsutil)\n[![docs](https://img.shields.io/badge/hsDocs-hsUtil-blue.svg)](https://helpfulscripts.github.io/hsUtil/#!/api/hsUtil/0)\n[![Build Status](https://travis-ci.org/HelpfulScripts/hsUtil.svg?branch=master)](https://travis-ci.org/HelpfulScripts/hsUtil)\n[![Dependencies Status](https://david-dm.org/helpfulscripts/hsutil.svg)](https://david-dm.org/helpfulscripts/hsutil)\n[![Coverage Status](https://coveralls.io/repos/github/HelpfulScripts/hsUtil/badge.svg)](https://coveralls.io/github/HelpfulScripts/hsUtil)\n[![Known Vulnerabilities](https://snyk.io/test/github/HelpfulScripts/hsUtil/badge.svg?targetFile=package.json)](https://snyk.io/test/github/HelpfulScripts/hsUtil?targetFile=package.json)\n[![NPM License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://www.npmjs.com/package/hsutil)\n\n___\n\n## Index - no external dependencies:\n- &nbsp; {@link TimedPromises TimedPromises} functions that provide delays and timeouts for promises.\n- &nbsp; {@link Checksum Checksum} a quick checksum implementation for small strings\n- &nbsp; {@link Date Date} printf-style date formatting function\n- &nbsp; {@link round Number.round} rounding to n digits\n- &nbsp; {@link log Log} module-level logging\n"
			},
			"sources": [
				{
					"fileName": "overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				5,
				76,
				41,
				223,
				81,
				224,
				321
			]
		}
	]
}